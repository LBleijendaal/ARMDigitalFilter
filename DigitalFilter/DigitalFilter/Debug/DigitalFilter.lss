
DigitalFilter.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000160c  00400000  00400000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20400000  0040160c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000012c  20400434  00401a40  00020434  2**2
                  ALLOC
  3 .heap         00000200  20400560  00401b6c  00020434  2**0
                  ALLOC
  4 .stack        00000400  20400760  00401d6c  00020434  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002045e  2**0
                  CONTENTS, READONLY
  7 .debug_info   000089a6  00000000  00000000  000204b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001092  00000000  00000000  00028e5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000031d  00000000  00000000  00029eef  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000160  00000000  00000000  0002a20c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  0002a36c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00037c04  00000000  00000000  0002a43c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00005825  00000000  00000000  00062040  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00132400  00000000  00000000  00067865  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00000600  00000000  00000000  00199c68  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	60 0b 40 20 a9 04 40 00 a5 04 40 00 a5 04 40 00     `.@ ..@...@...@.
  400010:	a5 04 40 00 a5 04 40 00 a5 04 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	a5 04 40 00 a5 04 40 00 00 00 00 00 a5 04 40 00     ..@...@.......@.
  40003c:	a5 04 40 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     ..@...@...@...@.
  40004c:	a5 04 40 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     ..@...@...@...@.
  40005c:	a5 04 40 00 a5 04 40 00 00 00 00 00 a5 04 40 00     ..@...@.......@.
  40006c:	a5 04 40 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     ..@...@...@...@.
  40007c:	a5 04 40 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     ..@...@...@...@.
  40008c:	a5 04 40 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     ..@...@...@...@.
  40009c:	4d 06 40 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     M.@...@...@...@.
  4000ac:	a5 04 40 00 a5 04 40 00 1d 06 40 00 a5 06 40 00     ..@...@...@...@.
  4000bc:	a5 04 40 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     ..@...@...@...@.
  4000cc:	a5 04 40 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     ..@...@...@...@.
  4000dc:	a5 04 40 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     ..@...@...@...@.
  4000ec:	a5 04 40 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     ..@...@...@...@.
  4000fc:	a5 04 40 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     ..@...@...@...@.
  40010c:	a5 04 40 00 a5 04 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     ......@...@...@.
  40012c:	a5 04 40 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     ..@...@...@...@.
  40013c:	a5 04 40 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     ..@...@...@...@.
  40014c:	a5 04 40 00 a5 04 40 00 a5 04 40 00 a5 04 40 00     ..@...@...@...@.
  40015c:	a5 04 40 00 a5 04 40 00 a5 04 40 00                 ..@...@...@.

00400168 <__do_global_dtors_aux>:
  400168:	b510      	push	{r4, lr}
  40016a:	4c05      	ldr	r4, [pc, #20]	; (400180 <__do_global_dtors_aux+0x18>)
  40016c:	7823      	ldrb	r3, [r4, #0]
  40016e:	b933      	cbnz	r3, 40017e <__do_global_dtors_aux+0x16>
  400170:	4b04      	ldr	r3, [pc, #16]	; (400184 <__do_global_dtors_aux+0x1c>)
  400172:	b113      	cbz	r3, 40017a <__do_global_dtors_aux+0x12>
  400174:	4804      	ldr	r0, [pc, #16]	; (400188 <__do_global_dtors_aux+0x20>)
  400176:	f3af 8000 	nop.w
  40017a:	2301      	movs	r3, #1
  40017c:	7023      	strb	r3, [r4, #0]
  40017e:	bd10      	pop	{r4, pc}
  400180:	20400434 	.word	0x20400434
  400184:	00000000 	.word	0x00000000
  400188:	0040160c 	.word	0x0040160c

0040018c <frame_dummy>:
  40018c:	4b0c      	ldr	r3, [pc, #48]	; (4001c0 <frame_dummy+0x34>)
  40018e:	b143      	cbz	r3, 4001a2 <frame_dummy+0x16>
  400190:	480c      	ldr	r0, [pc, #48]	; (4001c4 <frame_dummy+0x38>)
  400192:	490d      	ldr	r1, [pc, #52]	; (4001c8 <frame_dummy+0x3c>)
  400194:	b510      	push	{r4, lr}
  400196:	f3af 8000 	nop.w
  40019a:	480c      	ldr	r0, [pc, #48]	; (4001cc <frame_dummy+0x40>)
  40019c:	6803      	ldr	r3, [r0, #0]
  40019e:	b923      	cbnz	r3, 4001aa <frame_dummy+0x1e>
  4001a0:	bd10      	pop	{r4, pc}
  4001a2:	480a      	ldr	r0, [pc, #40]	; (4001cc <frame_dummy+0x40>)
  4001a4:	6803      	ldr	r3, [r0, #0]
  4001a6:	b933      	cbnz	r3, 4001b6 <frame_dummy+0x2a>
  4001a8:	4770      	bx	lr
  4001aa:	4b09      	ldr	r3, [pc, #36]	; (4001d0 <frame_dummy+0x44>)
  4001ac:	2b00      	cmp	r3, #0
  4001ae:	d0f7      	beq.n	4001a0 <frame_dummy+0x14>
  4001b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4001b4:	4718      	bx	r3
  4001b6:	4b06      	ldr	r3, [pc, #24]	; (4001d0 <frame_dummy+0x44>)
  4001b8:	2b00      	cmp	r3, #0
  4001ba:	d0f5      	beq.n	4001a8 <frame_dummy+0x1c>
  4001bc:	4718      	bx	r3
  4001be:	bf00      	nop
  4001c0:	00000000 	.word	0x00000000
  4001c4:	0040160c 	.word	0x0040160c
  4001c8:	20400438 	.word	0x20400438
  4001cc:	0040160c 	.word	0x0040160c
  4001d0:	00000000 	.word	0x00000000

004001d4 <afec0ch0_init>:
#include "afec.h"
#include <stdlib.h>


void afec0ch0_init(uint32_t prescaler)
{
  4001d4:	b410      	push	{r4}
	/* Enable AFEC0 peripheral's clock. */
	PMC->PMC_PCR = PMC_PCR_PID(ID_AFEC0);
  4001d6:	4b16      	ldr	r3, [pc, #88]	; (400230 <afec0ch0_init+0x5c>)
  4001d8:	221d      	movs	r2, #29
  4001da:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	PMC->PMC_PCR |= PMC_PCR_EN | PMC_PCR_CMD;
  4001de:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  4001e2:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
  4001e6:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	
	/* Reset and configure the AFEC module */
	AFEC0->AFEC_CR = AFEC_CR_SWRST;
  4001ea:	4b12      	ldr	r3, [pc, #72]	; (400234 <afec0ch0_init+0x60>)
  4001ec:	2201      	movs	r2, #1
  4001ee:	601a      	str	r2, [r3, #0]
	
	AFEC0->AFEC_MR = AFEC_MR_PRESCAL(prescaler) 
  4001f0:	0200      	lsls	r0, r0, #8
  4001f2:	b280      	uxth	r0, r0
	| AFEC_MR_ONE 
	| AFEC_MR_TRANSFER(0x02) 											// Set to 2 to optimize transfer time.
	| AFEC_MR_STARTUP_SUT64												// Start Up Time is 64 periods AFEC clock.
	| AFEC_MR_TRACKTIM(0xF);											// Inherent tracking time is always 15 AFE clock cycles. Do not modify this field.
  4001f4:	4910      	ldr	r1, [pc, #64]	; (400238 <afec0ch0_init+0x64>)
  4001f6:	4301      	orrs	r1, r0
	AFEC0->AFEC_MR = AFEC_MR_PRESCAL(prescaler) 
  4001f8:	6059      	str	r1, [r3, #4]
	
	AFEC0->AFEC_EMR = AFEC_EMR_RES_NO_AVERAGE									// 12-bit resolution, AFE sample rate is maximum (no averaging).	
  4001fa:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
  4001fe:	6099      	str	r1, [r3, #8]
	| AFEC_EMR_STM														// Only a single trigger is required to get an averaged value.
	| AFEC_EMR_SIGNMODE_SE_UNSG_DF_SIGN;								// Single-Ended channels: unsigned conversions. Differential channels: signed conversions.
	
	AFEC0->AFEC_ACR = AFEC_ACR_IBCTL(0x03) | AFEC_ACR_PGA0EN | AFEC_ACR_PGA1EN;
  400200:	f44f 7143 	mov.w	r1, #780	; 0x30c
  400204:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
	//AFEC0->AFEC_MR |= AFEC_MR_TRGEN;									// Enable Hardware Trigger
	/*
	 * The field AOFF must be configured to 512 (mid scale of the DAC) when there is no offset error to
	 * compensate.
	 */
	AFEC0->AFEC_CSELR = AFEC_CSELR_CSEL(AFEC0_CH0);
  400208:	2100      	movs	r1, #0
  40020a:	6659      	str	r1, [r3, #100]	; 0x64
	AFEC0->AFEC_COCR = AFEC_COCR_AOFF(0x200);
  40020c:	f44f 7100 	mov.w	r1, #512	; 0x200
  400210:	66d9      	str	r1, [r3, #108]	; 0x6c
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400212:	490a      	ldr	r1, [pc, #40]	; (40023c <afec0ch0_init+0x68>)
  400214:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
  400218:	f8c1 0180 	str.w	r0, [r1, #384]	; 0x180
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  40021c:	2420      	movs	r4, #32
  40021e:	f881 431d 	strb.w	r4, [r1, #797]	; 0x31d
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400222:	6008      	str	r0, [r1, #0]
	/* Enable end of conversion interrupt for channel 0 */
	
	NVIC_ClearPendingIRQ(AFEC0_IRQn);
	NVIC_SetPriority(AFEC0_IRQn, 1);
	NVIC_EnableIRQ(AFEC0_IRQn);
	AFEC0->AFEC_IER = AFEC_IER_EOC0;
  400224:	625a      	str	r2, [r3, #36]	; 0x24
	
	
	/* Enable Channel 0 for AFEC0 */
	AFEC0->AFEC_CHER = AFEC_CHER_CH0;
  400226:	615a      	str	r2, [r3, #20]
	
	AFEC0->AFEC_CR = AFEC_CR_START;
  400228:	2202      	movs	r2, #2
  40022a:	601a      	str	r2, [r3, #0]
}
  40022c:	bc10      	pop	{r4}
  40022e:	4770      	bx	lr
  400230:	400e0600 	.word	0x400e0600
  400234:	4003c000 	.word	0x4003c000
  400238:	2f840000 	.word	0x2f840000
  40023c:	e000e100 	.word	0xe000e100

00400240 <ioport_init>:


void ioport_init()
{
	/* Initialize IOPORTs */
	PMC->PMC_PCR = PMC_PCR_PID(ID_PIOA);
  400240:	4b45      	ldr	r3, [pc, #276]	; (400358 <ioport_init+0x118>)
  400242:	220a      	movs	r2, #10
  400244:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	PMC->PMC_PCR |= PMC_PCR_EN | PMC_PCR_CMD;
  400248:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  40024c:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
  400250:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	
	PMC->PMC_PCR = PMC_PCR_PID(ID_PIOB);
  400254:	220b      	movs	r2, #11
  400256:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	PMC->PMC_PCR |= PMC_PCR_EN | PMC_PCR_CMD;
  40025a:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  40025e:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
  400262:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	
	PMC->PMC_PCR = PMC_PCR_PID(ID_PIOC);
  400266:	220c      	movs	r2, #12
  400268:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	PMC->PMC_PCR |= PMC_PCR_EN | PMC_PCR_CMD;
  40026c:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  400270:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
  400274:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	
	PMC->PMC_PCR = PMC_PCR_PID(ID_PIOD);
  400278:	2210      	movs	r2, #16
  40027a:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	PMC->PMC_PCR |= PMC_PCR_EN | PMC_PCR_CMD;
  40027e:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  400282:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
  400286:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	
	PMC->PMC_PCR = PMC_PCR_PID(ID_PIOE);
  40028a:	2211      	movs	r2, #17
  40028c:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	PMC->PMC_PCR |= PMC_PCR_EN | PMC_PCR_CMD;
  400290:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  400294:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
  400298:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	
	/* Configure the pins connected to LED as output and set their
	 * default initial state to high (LED off).
	 */
	PIOC->PIO_OER |= PIO_PC8;
  40029c:	f503 6340 	add.w	r3, r3, #3072	; 0xc00
  4002a0:	691a      	ldr	r2, [r3, #16]
  4002a2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
  4002a6:	611a      	str	r2, [r3, #16]
	PIOC->PIO_OWER |= PIO_PC8;
  4002a8:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  4002ac:	f442 7280 	orr.w	r2, r2, #256	; 0x100
  4002b0:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	PIOC->PIO_CODR |= PIO_PC8;
  4002b4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
  4002b6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
  4002ba:	635a      	str	r2, [r3, #52]	; 0x34
	
	PIOC->PIO_OER |= PIO_PC10;
  4002bc:	691a      	ldr	r2, [r3, #16]
  4002be:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
  4002c2:	611a      	str	r2, [r3, #16]
	PIOC->PIO_OWER |= PIO_PC10;
  4002c4:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  4002c8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
  4002cc:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	PIOC->PIO_CODR |= PIO_PC10;
  4002d0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
  4002d2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
  4002d6:	635a      	str	r2, [r3, #52]	; 0x34

	

	
	/* Configure Push Button pins */
	PIOA->PIO_ODR |= PIO_PA11;
  4002d8:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  4002dc:	695a      	ldr	r2, [r3, #20]
  4002de:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
  4002e2:	615a      	str	r2, [r3, #20]
	PIOA->PIO_OWER |= PIO_PA11;
  4002e4:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  4002e8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
  4002ec:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	PIOA->PIO_PUER |= PIO_PA11;
  4002f0:	6e5a      	ldr	r2, [r3, #100]	; 0x64
  4002f2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
  4002f6:	665a      	str	r2, [r3, #100]	; 0x64
	PIOA->PIO_PPDDR |= PIO_PA11;
  4002f8:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
  4002fc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
  400300:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
	PIOA->PIO_MDDR |= PIO_PA11;
  400304:	6d5a      	ldr	r2, [r3, #84]	; 0x54
  400306:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
  40030a:	655a      	str	r2, [r3, #84]	; 0x54
	PIOA->PIO_IFER |= PIO_PA11;
  40030c:	6a1a      	ldr	r2, [r3, #32]
  40030e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
  400312:	621a      	str	r2, [r3, #32]
	PIOA->PIO_IFSCER |= PIO_PA11;
  400314:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
  400318:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
  40031c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
	PIOA->PIO_ABCDSR[0] &= ~(PIO_PA11);
  400320:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400322:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
  400326:	671a      	str	r2, [r3, #112]	; 0x70
	PIOA->PIO_ABCDSR[1] &= ~(PIO_PA11);
  400328:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  40032a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
  40032e:	675a      	str	r2, [r3, #116]	; 0x74
	PIOA->PIO_ESR |= PIO_PA11;
  400330:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
  400334:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
  400338:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
	PIOA->PIO_REHLSR |= PIO_PA11;
  40033c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  400340:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
  400344:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
	PIOA->PIO_AIMER |= PIO_PA11;
  400348:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
  40034c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
  400350:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400354:	4770      	bx	lr
  400356:	bf00      	nop
  400358:	400e0600 	.word	0x400e0600

0040035c <board_init>:
}

void board_init()
{
  40035c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	/* Disable Watchdog */
	WDT->WDT_MR |= WDT_MR_WDDIS;
  40035e:	4a32      	ldr	r2, [pc, #200]	; (400428 <board_init+0xcc>)
  400360:	6853      	ldr	r3, [r2, #4]
  400362:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
  400366:	6053      	str	r3, [r2, #4]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
  400368:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40036c:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  400370:	4b2e      	ldr	r3, [pc, #184]	; (40042c <board_init+0xd0>)
  400372:	2100      	movs	r1, #0
  400374:	f8c3 1250 	str.w	r1, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
  400378:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40037c:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  400380:	695a      	ldr	r2, [r3, #20]
  400382:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400386:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
  400388:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40038c:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
  400390:	f8c3 1084 	str.w	r1, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
  400394:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
  400398:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80

                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
  40039c:	f3c7 354e 	ubfx	r5, r7, #13, #15
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  4003a0:	f3c7 07c9 	ubfx	r7, r7, #3, #10
  4003a4:	016e      	lsls	r6, r5, #5
  4003a6:	ea4f 7c87 	mov.w	ip, r7, lsl #30
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  4003aa:	f643 7ee0 	movw	lr, #16352	; 0x3fe0
  4003ae:	461c      	mov	r4, r3
  4003b0:	ea06 000e 	and.w	r0, r6, lr
  4003b4:	4662      	mov	r2, ip
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
  4003b6:	463b      	mov	r3, r7
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
  4003b8:	ea42 0100 	orr.w	r1, r2, r0
  4003bc:	f8c4 1260 	str.w	r1, [r4, #608]	; 0x260
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
  4003c0:	3b01      	subs	r3, #1
  4003c2:	f102 4240 	add.w	r2, r2, #3221225472	; 0xc0000000
  4003c6:	f1b3 3fff 	cmp.w	r3, #4294967295
  4003ca:	d1f5      	bne.n	4003b8 <board_init+0x5c>
    } while(sets-- != 0U);
  4003cc:	3d01      	subs	r5, #1
  4003ce:	3e20      	subs	r6, #32
  4003d0:	f1b5 3fff 	cmp.w	r5, #4294967295
  4003d4:	d1ec      	bne.n	4003b0 <board_init+0x54>
  4003d6:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
  4003da:	4b14      	ldr	r3, [pc, #80]	; (40042c <board_init+0xd0>)
  4003dc:	695a      	ldr	r2, [r3, #20]
  4003de:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  4003e2:	615a      	str	r2, [r3, #20]
  4003e4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4003e8:	f3bf 8f6f 	isb	sy
	/* Enabling the Cache */
	SCB_EnableICache();
	SCB_EnableDCache();
	
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB
  4003ec:	4a10      	ldr	r2, [pc, #64]	; (400430 <board_init+0xd4>)
  4003ee:	4911      	ldr	r1, [pc, #68]	; (400434 <board_init+0xd8>)
  4003f0:	6051      	str	r1, [r2, #4]
	| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB
  4003f2:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  4003f6:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb 0xF":::"memory");
  4003f8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4003fc:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400400:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400404:	f022 0201 	bic.w	r2, r2, #1
  400408:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  40040c:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400410:	f022 0201 	bic.w	r2, r2, #1
  400414:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb 0xF":::"memory");
  400418:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  40041c:	f3bf 8f6f 	isb	sy
	| EEFC_FCR_FARG(7));
	
	tcm_disable();
	
	ioport_init();
  400420:	4b05      	ldr	r3, [pc, #20]	; (400438 <board_init+0xdc>)
  400422:	4798      	blx	r3
  400424:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400426:	bf00      	nop
  400428:	400e1850 	.word	0x400e1850
  40042c:	e000ed00 	.word	0xe000ed00
  400430:	400e0c00 	.word	0x400e0c00
  400434:	5a00080c 	.word	0x5a00080c
  400438:	00400241 	.word	0x00400241

0040043c <dac0ch0init>:
#include "sam.h"

void dac0ch0init(void) 
{
	/* Enable DACC peripheral's clock. */
	PMC->PMC_PCR = PMC_PCR_PID(ID_DACC);
  40043c:	4b16      	ldr	r3, [pc, #88]	; (400498 <dac0ch0init+0x5c>)
  40043e:	221e      	movs	r2, #30
  400440:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	PMC->PMC_PCR |= PMC_PCR_EN | PMC_PCR_CMD;
  400444:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  400448:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
  40044c:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	
	/* Reset and configure the DACC module */
	DACC->DACC_CR = DACC_CR_SWRST;
  400450:	4b12      	ldr	r3, [pc, #72]	; (40049c <dac0ch0init+0x60>)
  400452:	2101      	movs	r1, #1
  400454:	6019      	str	r1, [r3, #0]
	
	DACC->DACC_WPMR |= DACC_WPMR_WPKEY_PASSWD;
  400456:	f8d3 00e4 	ldr.w	r0, [r3, #228]	; 0xe4
  40045a:	4a11      	ldr	r2, [pc, #68]	; (4004a0 <dac0ch0init+0x64>)
  40045c:	4302      	orrs	r2, r0
  40045e:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	DACC->DACC_WPMR |= (0x00 << 0);
  400462:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
  400466:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	
	DACC->DACC_MR |= DACC_MR_PRESCALER(0xF)
  40046a:	685a      	ldr	r2, [r3, #4]
  40046c:	f042 6270 	orr.w	r2, r2, #251658240	; 0xf000000
  400470:	605a      	str	r2, [r3, #4]
	| DACC_MR_WORD_DISABLED
	| DACC_MR_MAXS0_TRIG_EVENT 
	| DACC_MR_MAXS1_TRIG_EVENT;
	
	
	DACC->DACC_TRIGR |= DACC_TRIGR_TRGEN0_DIS;
  400472:	689a      	ldr	r2, [r3, #8]
  400474:	609a      	str	r2, [r3, #8]
	
	DACC->DACC_ACR |= DACC_ACR_IBCTLCH0(3);
  400476:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
  40047a:	f042 0203 	orr.w	r2, r2, #3
  40047e:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94

	//NVIC_ClearPendingIRQ(DACC_IRQn);
	//NVIC_SetPriority(DACC_IRQn, 1);
	//NVIC_EnableIRQ(DACC_IRQn);
	
	uint32_t daccStatus = DACC->DACC_CHSR;
  400482:	699a      	ldr	r2, [r3, #24]
	
	DACC->DACC_CHER = DACC_CHER_CH0_Msk;
  400484:	6119      	str	r1, [r3, #16]
	
	while((daccStatus & DACC_CHSR_DACRDY0_Msk) == 0) {
  400486:	f412 7f80 	tst.w	r2, #256	; 0x100
  40048a:	d104      	bne.n	400496 <dac0ch0init+0x5a>
		daccStatus = DACC->DACC_CHSR;
  40048c:	461a      	mov	r2, r3
  40048e:	6993      	ldr	r3, [r2, #24]
	while((daccStatus & DACC_CHSR_DACRDY0_Msk) == 0) {
  400490:	f413 7f80 	tst.w	r3, #256	; 0x100
  400494:	d0fb      	beq.n	40048e <dac0ch0init+0x52>
  400496:	4770      	bx	lr
  400498:	400e0600 	.word	0x400e0600
  40049c:	40040000 	.word	0x40040000
  4004a0:	44414300 	.word	0x44414300

004004a4 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4004a4:	e7fe      	b.n	4004a4 <Dummy_Handler>
	...

004004a8 <Reset_Handler>:
{
  4004a8:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
  4004aa:	4b17      	ldr	r3, [pc, #92]	; (400508 <Reset_Handler+0x60>)
  4004ac:	4a17      	ldr	r2, [pc, #92]	; (40050c <Reset_Handler+0x64>)
  4004ae:	429a      	cmp	r2, r3
  4004b0:	d010      	beq.n	4004d4 <Reset_Handler+0x2c>
                for (; pDest < &_erelocate;) {
  4004b2:	4b17      	ldr	r3, [pc, #92]	; (400510 <Reset_Handler+0x68>)
  4004b4:	4a14      	ldr	r2, [pc, #80]	; (400508 <Reset_Handler+0x60>)
  4004b6:	429a      	cmp	r2, r3
  4004b8:	d20c      	bcs.n	4004d4 <Reset_Handler+0x2c>
  4004ba:	3b01      	subs	r3, #1
  4004bc:	1a9b      	subs	r3, r3, r2
  4004be:	f023 0303 	bic.w	r3, r3, #3
  4004c2:	3304      	adds	r3, #4
  4004c4:	4413      	add	r3, r2
  4004c6:	4911      	ldr	r1, [pc, #68]	; (40050c <Reset_Handler+0x64>)
                        *pDest++ = *pSrc++;
  4004c8:	f851 0b04 	ldr.w	r0, [r1], #4
  4004cc:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4004d0:	429a      	cmp	r2, r3
  4004d2:	d1f9      	bne.n	4004c8 <Reset_Handler+0x20>
        for (pDest = &_szero; pDest < &_ezero;) {
  4004d4:	4b0f      	ldr	r3, [pc, #60]	; (400514 <Reset_Handler+0x6c>)
  4004d6:	4a10      	ldr	r2, [pc, #64]	; (400518 <Reset_Handler+0x70>)
  4004d8:	429a      	cmp	r2, r3
  4004da:	d20a      	bcs.n	4004f2 <Reset_Handler+0x4a>
  4004dc:	3b01      	subs	r3, #1
  4004de:	1a9b      	subs	r3, r3, r2
  4004e0:	f023 0303 	bic.w	r3, r3, #3
  4004e4:	3304      	adds	r3, #4
  4004e6:	4413      	add	r3, r2
                *pDest++ = 0;
  4004e8:	2100      	movs	r1, #0
  4004ea:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4004ee:	4293      	cmp	r3, r2
  4004f0:	d1fb      	bne.n	4004ea <Reset_Handler+0x42>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4004f2:	4a0a      	ldr	r2, [pc, #40]	; (40051c <Reset_Handler+0x74>)
  4004f4:	4b0a      	ldr	r3, [pc, #40]	; (400520 <Reset_Handler+0x78>)
  4004f6:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4004fa:	6093      	str	r3, [r2, #8]
        __libc_init_array();
  4004fc:	4b09      	ldr	r3, [pc, #36]	; (400524 <Reset_Handler+0x7c>)
  4004fe:	4798      	blx	r3
        main();
  400500:	4b09      	ldr	r3, [pc, #36]	; (400528 <Reset_Handler+0x80>)
  400502:	4798      	blx	r3
  400504:	e7fe      	b.n	400504 <Reset_Handler+0x5c>
  400506:	bf00      	nop
  400508:	20400000 	.word	0x20400000
  40050c:	0040160c 	.word	0x0040160c
  400510:	20400434 	.word	0x20400434
  400514:	20400560 	.word	0x20400560
  400518:	20400434 	.word	0x20400434
  40051c:	e000ed00 	.word	0xe000ed00
  400520:	00400000 	.word	0x00400000
  400524:	0040120d 	.word	0x0040120d
  400528:	004005b9 	.word	0x004005b9

0040052c <SystemInit>:
 *         Initialize the System and update the SystemCoreClock variable.
 */
void SystemInit(void)
{
    // Keep the default device state after reset
    SystemCoreClock = __SYSTEM_CLOCK;
  40052c:	4a01      	ldr	r2, [pc, #4]	; (400534 <SystemInit+0x8>)
  40052e:	4b02      	ldr	r3, [pc, #8]	; (400538 <SystemInit+0xc>)
  400530:	601a      	str	r2, [r3, #0]
  400532:	4770      	bx	lr
  400534:	00b71b00 	.word	0x00b71b00
  400538:	20400000 	.word	0x20400000

0040053c <firFilter>:
static float buffer[51];
static uint32_t offset;


float firFilter(float input)
{
  40053c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400540:	4916      	ldr	r1, [pc, #88]	; (40059c <firFilter+0x60>)
  400542:	f101 08c8 	add.w	r8, r1, #200	; 0xc8
  400546:	4643      	mov	r3, r8
	double output;
	
	for(int i = (N_coefficients - 1); i > 0; i--) {
		buffer[i] = buffer[i-1];
  400548:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40054c:	605a      	str	r2, [r3, #4]
	for(int i = (N_coefficients - 1); i > 0; i--) {
  40054e:	428b      	cmp	r3, r1
  400550:	d1fa      	bne.n	400548 <firFilter+0xc>
	}
	
	buffer[0] = input;
  400552:	4c12      	ldr	r4, [pc, #72]	; (40059c <firFilter+0x60>)
  400554:	f844 0904 	str.w	r0, [r4], #-4
  400558:	4d11      	ldr	r5, [pc, #68]	; (4005a0 <firFilter+0x64>)
	
	for(int i = 0; i < N_coefficients; i++) {
		output += buffer[i] * coefficients[i];
  40055a:	f8df b058 	ldr.w	fp, [pc, #88]	; 4005b4 <firFilter+0x78>
  40055e:	4f11      	ldr	r7, [pc, #68]	; (4005a4 <firFilter+0x68>)
  400560:	4e11      	ldr	r6, [pc, #68]	; (4005a8 <firFilter+0x6c>)
  400562:	f855 1f04 	ldr.w	r1, [r5, #4]!
  400566:	f854 0f04 	ldr.w	r0, [r4, #4]!
  40056a:	47d8      	blx	fp
  40056c:	47b8      	blx	r7
  40056e:	4602      	mov	r2, r0
  400570:	460b      	mov	r3, r1
  400572:	4648      	mov	r0, r9
  400574:	4651      	mov	r1, sl
  400576:	47b0      	blx	r6
  400578:	4681      	mov	r9, r0
  40057a:	468a      	mov	sl, r1
	for(int i = 0; i < N_coefficients; i++) {
  40057c:	4544      	cmp	r4, r8
  40057e:	d1f0      	bne.n	400562 <firFilter+0x26>
	
	}
	
			PIOC->PIO_CODR |= PIO_PC8;
  400580:	4b0a      	ldr	r3, [pc, #40]	; (4005ac <firFilter+0x70>)
  400582:	6b5a      	ldr	r2, [r3, #52]	; 0x34
  400584:	f442 7280 	orr.w	r2, r2, #256	; 0x100
  400588:	635a      	str	r2, [r3, #52]	; 0x34
			
			PIOC->PIO_SODR |= PIO_PC8;
  40058a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40058c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
  400590:	631a      	str	r2, [r3, #48]	; 0x30

	
	return output;
  400592:	4b07      	ldr	r3, [pc, #28]	; (4005b0 <firFilter+0x74>)
  400594:	4798      	blx	r3
}
  400596:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40059a:	bf00      	nop
  40059c:	20400450 	.word	0x20400450
  4005a0:	00401378 	.word	0x00401378
  4005a4:	00400add 	.word	0x00400add
  4005a8:	00400821 	.word	0x00400821
  4005ac:	400e1200 	.word	0x400e1200
  4005b0:	00400b85 	.word	0x00400b85
  4005b4:	00400e41 	.word	0x00400e41

004005b8 <main>:
static volatile uint32_t triggered;

void fillFIFO(void);

int main(void)
{
  4005b8:	b570      	push	{r4, r5, r6, lr}
    /* Initialize the SAM system */
    SystemInit();
  4005ba:	4b0e      	ldr	r3, [pc, #56]	; (4005f4 <main+0x3c>)
  4005bc:	4798      	blx	r3
	sysclk_init();
  4005be:	4b0e      	ldr	r3, [pc, #56]	; (4005f8 <main+0x40>)
  4005c0:	4798      	blx	r3
	board_init();
  4005c2:	4b0e      	ldr	r3, [pc, #56]	; (4005fc <main+0x44>)
  4005c4:	4798      	blx	r3
	initTimer();
  4005c6:	4b0e      	ldr	r3, [pc, #56]	; (400600 <main+0x48>)
  4005c8:	4798      	blx	r3
	
	
	afec0ch0_init(0x3);
  4005ca:	2003      	movs	r0, #3
  4005cc:	4b0d      	ldr	r3, [pc, #52]	; (400604 <main+0x4c>)
  4005ce:	4798      	blx	r3
	dac0ch0init();
  4005d0:	4b0d      	ldr	r3, [pc, #52]	; (400608 <main+0x50>)
  4005d2:	4798      	blx	r3
	
    /* Replace with your application code */
    while (1) 
    {
		//if((updated == 1) && (triggered == 0)) {
			tmp2 = firFilter(tmp);
  4005d4:	4c0d      	ldr	r4, [pc, #52]	; (40060c <main+0x54>)
  4005d6:	4e0e      	ldr	r6, [pc, #56]	; (400610 <main+0x58>)
			triggered = 1;
			
			if(tmp2 > 5000) {
  4005d8:	4d0e      	ldr	r5, [pc, #56]	; (400614 <main+0x5c>)
			tmp2 = firFilter(tmp);
  4005da:	6820      	ldr	r0, [r4, #0]
  4005dc:	47b0      	blx	r6
  4005de:	6060      	str	r0, [r4, #4]
			triggered = 1;
  4005e0:	2301      	movs	r3, #1
  4005e2:	60a3      	str	r3, [r4, #8]
			if(tmp2 > 5000) {
  4005e4:	6860      	ldr	r0, [r4, #4]
  4005e6:	4629      	mov	r1, r5
  4005e8:	4b0b      	ldr	r3, [pc, #44]	; (400618 <main+0x60>)
  4005ea:	4798      	blx	r3
  4005ec:	2800      	cmp	r0, #0
  4005ee:	d0f4      	beq.n	4005da <main+0x22>
				break;
			}
	//	}
	}	
}
  4005f0:	2000      	movs	r0, #0
  4005f2:	bd70      	pop	{r4, r5, r6, pc}
  4005f4:	0040052d 	.word	0x0040052d
  4005f8:	00400725 	.word	0x00400725
  4005fc:	0040035d 	.word	0x0040035d
  400600:	00400795 	.word	0x00400795
  400604:	004001d5 	.word	0x004001d5
  400608:	0040043d 	.word	0x0040043d
  40060c:	2040051c 	.word	0x2040051c
  400610:	0040053d 	.word	0x0040053d
  400614:	459c4000 	.word	0x459c4000
  400618:	004011b9 	.word	0x004011b9

0040061c <AFEC0_Handler>:
void AFEC0_Handler(void)
{
  40061c:	b508      	push	{r3, lr}
	uint32_t status = AFEC0->AFEC_ISR;
  40061e:	4b08      	ldr	r3, [pc, #32]	; (400640 <AFEC0_Handler+0x24>)
  400620:	6b1b      	ldr	r3, [r3, #48]	; 0x30
	
	if((status & AFEC_IMR_EOC0) == 1) {
  400622:	f013 0f01 	tst.w	r3, #1
  400626:	d009      	beq.n	40063c <AFEC0_Handler+0x20>
		
		tmp = AFEC0->AFEC_CDR;
  400628:	4b05      	ldr	r3, [pc, #20]	; (400640 <AFEC0_Handler+0x24>)
  40062a:	6e98      	ldr	r0, [r3, #104]	; 0x68
  40062c:	4b05      	ldr	r3, [pc, #20]	; (400644 <AFEC0_Handler+0x28>)
  40062e:	4798      	blx	r3
  400630:	4b05      	ldr	r3, [pc, #20]	; (400648 <AFEC0_Handler+0x2c>)
  400632:	6018      	str	r0, [r3, #0]
	
		updated = 1;
  400634:	2201      	movs	r2, #1
  400636:	60da      	str	r2, [r3, #12]
		triggered = 0;
  400638:	2200      	movs	r2, #0
  40063a:	609a      	str	r2, [r3, #8]
  40063c:	bd08      	pop	{r3, pc}
  40063e:	bf00      	nop
  400640:	4003c000 	.word	0x4003c000
  400644:	00400d91 	.word	0x00400d91
  400648:	2040051c 	.word	0x2040051c

0040064c <TC0_Handler>:
		
		//PIOC->PIO_SODR |= PIO_PC8;
	}		
}

void TC0_Handler(void) {
  40064c:	b508      	push	{r3, lr}
	
	uint32_t statusT = REG_TC0_SR0;
  40064e:	4b10      	ldr	r3, [pc, #64]	; (400690 <TC0_Handler+0x44>)
  400650:	681b      	ldr	r3, [r3, #0]
		
	if((statusT & TC_SR_CPCS) >= 1) {
  400652:	f013 0f10 	tst.w	r3, #16
  400656:	d019      	beq.n	40068c <TC0_Handler+0x40>
		
		if(updated) {
  400658:	4b0e      	ldr	r3, [pc, #56]	; (400694 <TC0_Handler+0x48>)
  40065a:	68db      	ldr	r3, [r3, #12]
  40065c:	b12b      	cbz	r3, 40066a <TC0_Handler+0x1e>
			
			//tmp2 = firFilter(tmp);
			
			AFEC0->AFEC_CR = AFEC_CR_START;			
  40065e:	2202      	movs	r2, #2
  400660:	4b0d      	ldr	r3, [pc, #52]	; (400698 <TC0_Handler+0x4c>)
  400662:	601a      	str	r2, [r3, #0]
			updated = 0;
  400664:	2200      	movs	r2, #0
  400666:	4b0b      	ldr	r3, [pc, #44]	; (400694 <TC0_Handler+0x48>)
  400668:	60da      	str	r2, [r3, #12]
		}
		if( ((((DACC->DACC_ISR) & DACC_ISR_TXRDY0_Msk)) == 1) && ((DACC -> DACC_CHSR) & (0x1u << 8)) == 256 )
  40066a:	4b0c      	ldr	r3, [pc, #48]	; (40069c <TC0_Handler+0x50>)
  40066c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40066e:	f013 0f01 	tst.w	r3, #1
  400672:	d00b      	beq.n	40068c <TC0_Handler+0x40>
  400674:	4b09      	ldr	r3, [pc, #36]	; (40069c <TC0_Handler+0x50>)
  400676:	699b      	ldr	r3, [r3, #24]
  400678:	f413 7f80 	tst.w	r3, #256	; 0x100
  40067c:	d006      	beq.n	40068c <TC0_Handler+0x40>
		{
			DACC->DACC_CDR[0] = DACC_CDR_DATA0((uint32_t)tmp2);
  40067e:	4b05      	ldr	r3, [pc, #20]	; (400694 <TC0_Handler+0x48>)
  400680:	6858      	ldr	r0, [r3, #4]
  400682:	4b07      	ldr	r3, [pc, #28]	; (4006a0 <TC0_Handler+0x54>)
  400684:	4798      	blx	r3
  400686:	b280      	uxth	r0, r0
  400688:	4b04      	ldr	r3, [pc, #16]	; (40069c <TC0_Handler+0x50>)
  40068a:	61d8      	str	r0, [r3, #28]
  40068c:	bd08      	pop	{r3, pc}
  40068e:	bf00      	nop
  400690:	4000c020 	.word	0x4000c020
  400694:	2040051c 	.word	0x2040051c
  400698:	4003c000 	.word	0x4003c000
  40069c:	40040000 	.word	0x40040000
  4006a0:	004011cd 	.word	0x004011cd

004006a4 <DACC_Handler>:
	//PIOC->PIO_SODR |= PIO_PC8;
}



void DACC_Handler(void) {
  4006a4:	4770      	bx	lr
	...

004006a8 <mainclk_init>:
uint32_t mainclk_init()
{
	uint16_t tmp = 0;
	
	/* Enable Main XOSC */
	PMC->CKGR_MOR =	(PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY)
  4006a8:	4910      	ldr	r1, [pc, #64]	; (4006ec <mainclk_init+0x44>)
  4006aa:	6a0b      	ldr	r3, [r1, #32]
	| CKGR_MOR_KEY_PASSWD
	| CKGR_MOR_MOSCXTEN
	| CKGR_MOR_MOSCXTST(XOSC12M_STARTUP_TIME);
  4006ac:	4a10      	ldr	r2, [pc, #64]	; (4006f0 <mainclk_init+0x48>)
  4006ae:	401a      	ands	r2, r3
  4006b0:	4b10      	ldr	r3, [pc, #64]	; (4006f4 <mainclk_init+0x4c>)
  4006b2:	4313      	orrs	r3, r2
	PMC->CKGR_MOR =	(PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY)
  4006b4:	620b      	str	r3, [r1, #32]
	
	/* wait for XOSC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4006b6:	460a      	mov	r2, r1
  4006b8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4006ba:	f013 0f01 	tst.w	r3, #1
  4006be:	d0fb      	beq.n	4006b8 <mainclk_init+0x10>
	
	/* Select XOSC as Main Clock */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD
  4006c0:	4a0a      	ldr	r2, [pc, #40]	; (4006ec <mainclk_init+0x44>)
  4006c2:	6a11      	ldr	r1, [r2, #32]
  4006c4:	4b0c      	ldr	r3, [pc, #48]	; (4006f8 <mainclk_init+0x50>)
  4006c6:	430b      	orrs	r3, r1
  4006c8:	6213      	str	r3, [r2, #32]
	| CKGR_MOR_MOSCSEL;
	
	/* wait for Main Clock to be ready */
	while(!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  4006ca:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4006cc:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  4006d0:	d0fb      	beq.n	4006ca <mainclk_init+0x22>

	/* Check if Main Clock frequency is correct */
	while(!(PMC->CKGR_MCFR & CKGR_MCFR_MAINFRDY));
  4006d2:	4a06      	ldr	r2, [pc, #24]	; (4006ec <mainclk_init+0x44>)
  4006d4:	6a53      	ldr	r3, [r2, #36]	; 0x24
  4006d6:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  4006da:	d0fb      	beq.n	4006d4 <mainclk_init+0x2c>
	tmp = (PMC->CKGR_MCFR & CKGR_MCFR_MAINF_Msk);
  4006dc:	4b03      	ldr	r3, [pc, #12]	; (4006ec <mainclk_init+0x44>)
  4006de:	6a58      	ldr	r0, [r3, #36]	; 0x24
	
	if(tmp == 0) return EXIT_FAILURE;
  4006e0:	b280      	uxth	r0, r0
	
	return EXIT_SUCCESS;
	
}
  4006e2:	fab0 f080 	clz	r0, r0
  4006e6:	0940      	lsrs	r0, r0, #5
  4006e8:	4770      	bx	lr
  4006ea:	bf00      	nop
  4006ec:	400e0600 	.word	0x400e0600
  4006f0:	ffc8c1fc 	.word	0xffc8c1fc
  4006f4:	00373e01 	.word	0x00373e01
  4006f8:	01370000 	.word	0x01370000

004006fc <pll_init>:

/* Enable the PLL (300 MHz) */
uint32_t pll_init()
{
	/* Stop PLL first */
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE
  4006fc:	4b08      	ldr	r3, [pc, #32]	; (400720 <pll_init+0x24>)
  4006fe:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400702:	629a      	str	r2, [r3, #40]	; 0x28
	| CKGR_PLLAR_MULA(0);
	
	/* Configure and enable PLL */
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE
  400704:	f502 12c1 	add.w	r2, r2, #1581056	; 0x182000
  400708:	f502 52f8 	add.w	r2, r2, #7936	; 0x1f00
  40070c:	3201      	adds	r2, #1
  40070e:	629a      	str	r2, [r3, #40]	; 0x28
	| CKGR_PLLAR_DIVA_BYPASS
	| CKGR_PLLAR_MULA(((F_CPU / F_XOSC) - 1))
	| CKGR_PLLAR_PLLACOUNT(PLL_STARTUP_TIME);
	
	/* Wait for PLL lock */
	while(!(PMC->PMC_SR & PMC_SR_LOCKA));
  400710:	461a      	mov	r2, r3
  400712:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400714:	f013 0f02 	tst.w	r3, #2
  400718:	d0fb      	beq.n	400712 <pll_init+0x16>
	
	return EXIT_SUCCESS;
}
  40071a:	2000      	movs	r0, #0
  40071c:	4770      	bx	lr
  40071e:	bf00      	nop
  400720:	400e0600 	.word	0x400e0600

00400724 <sysclk_init>:

uint32_t sysclk_init()
{
  400724:	b508      	push	{r3, lr}
 * \brief Enable FPU
 */
static inline void fpu_enable(void)
{
	/** Set bits 20-23 to enable CP10 and CP11 coprocessors */
	SCB->CPACR |= (0xFu << 20);
  400726:	4a15      	ldr	r2, [pc, #84]	; (40077c <sysclk_init+0x58>)
  400728:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
  40072c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  400730:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
  400734:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400738:	f3bf 8f6f 	isb	sy
	fpu_enable();
	
	/* Set flash wait state */
	EFC->EEFC_FMR = EEFC_FMR_FWS(EFC_WAIT_STATE) 
  40073c:	4a10      	ldr	r2, [pc, #64]	; (400780 <sysclk_init+0x5c>)
  40073e:	4b11      	ldr	r3, [pc, #68]	; (400784 <sysclk_init+0x60>)
  400740:	601a      	str	r2, [r3, #0]
	| EEFC_FMR_CLOE;
			

	mainclk_init();
  400742:	4b11      	ldr	r3, [pc, #68]	; (400788 <sysclk_init+0x64>)
  400744:	4798      	blx	r3
	pll_init();
  400746:	4b11      	ldr	r3, [pc, #68]	; (40078c <sysclk_init+0x68>)
  400748:	4798      	blx	r3

	
	/* Select Master Clock Div */
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) 
  40074a:	4a11      	ldr	r2, [pc, #68]	; (400790 <sysclk_init+0x6c>)
  40074c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40074e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
	| PMC_MCKR_MDIV_PCK_DIV2;
  400752:	f443 7380 	orr.w	r3, r3, #256	; 0x100
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) 
  400756:	6313      	str	r3, [r2, #48]	; 0x30
	/* Wait until master clock is ready */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400758:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40075a:	f013 0f08 	tst.w	r3, #8
  40075e:	d0fb      	beq.n	400758 <sysclk_init+0x34>
	
	/* Select PLL as Master Clock Source */
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk))
  400760:	4a0b      	ldr	r2, [pc, #44]	; (400790 <sysclk_init+0x6c>)
  400762:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400764:	f023 0303 	bic.w	r3, r3, #3
	| PMC_MCKR_CSS_PLLA_CLK;
  400768:	f043 0302 	orr.w	r3, r3, #2
	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk))
  40076c:	6313      	str	r3, [r2, #48]	; 0x30
	/* Wait until master clock is ready */
	while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40076e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400770:	f013 0f08 	tst.w	r3, #8
  400774:	d0fb      	beq.n	40076e <sysclk_init+0x4a>
	
	return EXIT_SUCCESS;
  400776:	2000      	movs	r0, #0
  400778:	bd08      	pop	{r3, pc}
  40077a:	bf00      	nop
  40077c:	e000ed00 	.word	0xe000ed00
  400780:	04000600 	.word	0x04000600
  400784:	400e0c00 	.word	0x400e0c00
  400788:	004006a9 	.word	0x004006a9
  40078c:	004006fd 	.word	0x004006fd
  400790:	400e0600 	.word	0x400e0600

00400794 <initTimer>:
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  400794:	4b1b      	ldr	r3, [pc, #108]	; (400804 <initTimer+0x70>)
  400796:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  40079a:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  40079e:	2120      	movs	r1, #32
  4007a0:	f883 1317 	strb.w	r1, [r3, #791]	; 0x317
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  4007a4:	601a      	str	r2, [r3, #0]
{
	NVIC_ClearPendingIRQ(TC0_IRQn);
	NVIC_SetPriority(TC0_IRQn, 1);
	NVIC_EnableIRQ(TC0_IRQn);
	
	PMC->PMC_PCR |= PMC_PCR_PID(ID_TC0);
  4007a6:	4b18      	ldr	r3, [pc, #96]	; (400808 <initTimer+0x74>)
  4007a8:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  4007ac:	f042 0217 	orr.w	r2, r2, #23
  4007b0:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	PMC->PMC_PCR |= PMC_PCR_EN | PMC_PCR_CMD;
  4007b4:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  4007b8:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
  4007bc:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
	//REG_PMC_PCER0 |= PMC_PCER0_PID23;
	
	REG_TC0_CMR0 |= TC_CMR_TCCLKS_TIMER_CLOCK2;
  4007c0:	f5a3 2354 	sub.w	r3, r3, #868352	; 0xd4000
  4007c4:	f2a3 53fc 	subw	r3, r3, #1532	; 0x5fc
  4007c8:	681a      	ldr	r2, [r3, #0]
  4007ca:	f042 0201 	orr.w	r2, r2, #1
  4007ce:	601a      	str	r2, [r3, #0]
	REG_TC0_IER0 |= TC_IER_CPCS_Msk;
  4007d0:	490e      	ldr	r1, [pc, #56]	; (40080c <initTimer+0x78>)
  4007d2:	680a      	ldr	r2, [r1, #0]
  4007d4:	f042 0210 	orr.w	r2, r2, #16
  4007d8:	600a      	str	r2, [r1, #0]
	REG_TC0_CMR0 |= TC_CMR_CPCTRG_Msk;
  4007da:	681a      	ldr	r2, [r3, #0]
  4007dc:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  4007e0:	601a      	str	r2, [r3, #0]
	
	REG_TC0_CCR0 |= TC_CCR_CLKEN;
  4007e2:	3b04      	subs	r3, #4
  4007e4:	681a      	ldr	r2, [r3, #0]
  4007e6:	f042 0201 	orr.w	r2, r2, #1
  4007ea:	601a      	str	r2, [r3, #0]
	
	REG_TC0_RC0 = 187;
  4007ec:	21bb      	movs	r1, #187	; 0xbb
  4007ee:	4a08      	ldr	r2, [pc, #32]	; (400810 <initTimer+0x7c>)
  4007f0:	6011      	str	r1, [r2, #0]
	REG_TC0_CCR0 |= TC_CCR_CLKEN;
  4007f2:	681a      	ldr	r2, [r3, #0]
  4007f4:	f042 0201 	orr.w	r2, r2, #1
  4007f8:	601a      	str	r2, [r3, #0]
	REG_TC0_CCR0 |= TC_CCR_SWTRG;
  4007fa:	681a      	ldr	r2, [r3, #0]
  4007fc:	f042 0204 	orr.w	r2, r2, #4
  400800:	601a      	str	r2, [r3, #0]
  400802:	4770      	bx	lr
  400804:	e000e100 	.word	0xe000e100
  400808:	400e0600 	.word	0x400e0600
  40080c:	4000c024 	.word	0x4000c024
  400810:	4000c01c 	.word	0x4000c01c

00400814 <__aeabi_drsub>:
  400814:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  400818:	e002      	b.n	400820 <__adddf3>
  40081a:	bf00      	nop

0040081c <__aeabi_dsub>:
  40081c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00400820 <__adddf3>:
  400820:	b530      	push	{r4, r5, lr}
  400822:	ea4f 0441 	mov.w	r4, r1, lsl #1
  400826:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40082a:	ea94 0f05 	teq	r4, r5
  40082e:	bf08      	it	eq
  400830:	ea90 0f02 	teqeq	r0, r2
  400834:	bf1f      	itttt	ne
  400836:	ea54 0c00 	orrsne.w	ip, r4, r0
  40083a:	ea55 0c02 	orrsne.w	ip, r5, r2
  40083e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  400842:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  400846:	f000 80e2 	beq.w	400a0e <__adddf3+0x1ee>
  40084a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  40084e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  400852:	bfb8      	it	lt
  400854:	426d      	neglt	r5, r5
  400856:	dd0c      	ble.n	400872 <__adddf3+0x52>
  400858:	442c      	add	r4, r5
  40085a:	ea80 0202 	eor.w	r2, r0, r2
  40085e:	ea81 0303 	eor.w	r3, r1, r3
  400862:	ea82 0000 	eor.w	r0, r2, r0
  400866:	ea83 0101 	eor.w	r1, r3, r1
  40086a:	ea80 0202 	eor.w	r2, r0, r2
  40086e:	ea81 0303 	eor.w	r3, r1, r3
  400872:	2d36      	cmp	r5, #54	; 0x36
  400874:	bf88      	it	hi
  400876:	bd30      	pophi	{r4, r5, pc}
  400878:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40087c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  400880:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  400884:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  400888:	d002      	beq.n	400890 <__adddf3+0x70>
  40088a:	4240      	negs	r0, r0
  40088c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  400890:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  400894:	ea4f 3303 	mov.w	r3, r3, lsl #12
  400898:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  40089c:	d002      	beq.n	4008a4 <__adddf3+0x84>
  40089e:	4252      	negs	r2, r2
  4008a0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  4008a4:	ea94 0f05 	teq	r4, r5
  4008a8:	f000 80a7 	beq.w	4009fa <__adddf3+0x1da>
  4008ac:	f1a4 0401 	sub.w	r4, r4, #1
  4008b0:	f1d5 0e20 	rsbs	lr, r5, #32
  4008b4:	db0d      	blt.n	4008d2 <__adddf3+0xb2>
  4008b6:	fa02 fc0e 	lsl.w	ip, r2, lr
  4008ba:	fa22 f205 	lsr.w	r2, r2, r5
  4008be:	1880      	adds	r0, r0, r2
  4008c0:	f141 0100 	adc.w	r1, r1, #0
  4008c4:	fa03 f20e 	lsl.w	r2, r3, lr
  4008c8:	1880      	adds	r0, r0, r2
  4008ca:	fa43 f305 	asr.w	r3, r3, r5
  4008ce:	4159      	adcs	r1, r3
  4008d0:	e00e      	b.n	4008f0 <__adddf3+0xd0>
  4008d2:	f1a5 0520 	sub.w	r5, r5, #32
  4008d6:	f10e 0e20 	add.w	lr, lr, #32
  4008da:	2a01      	cmp	r2, #1
  4008dc:	fa03 fc0e 	lsl.w	ip, r3, lr
  4008e0:	bf28      	it	cs
  4008e2:	f04c 0c02 	orrcs.w	ip, ip, #2
  4008e6:	fa43 f305 	asr.w	r3, r3, r5
  4008ea:	18c0      	adds	r0, r0, r3
  4008ec:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4008f0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4008f4:	d507      	bpl.n	400906 <__adddf3+0xe6>
  4008f6:	f04f 0e00 	mov.w	lr, #0
  4008fa:	f1dc 0c00 	rsbs	ip, ip, #0
  4008fe:	eb7e 0000 	sbcs.w	r0, lr, r0
  400902:	eb6e 0101 	sbc.w	r1, lr, r1
  400906:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40090a:	d31b      	bcc.n	400944 <__adddf3+0x124>
  40090c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  400910:	d30c      	bcc.n	40092c <__adddf3+0x10c>
  400912:	0849      	lsrs	r1, r1, #1
  400914:	ea5f 0030 	movs.w	r0, r0, rrx
  400918:	ea4f 0c3c 	mov.w	ip, ip, rrx
  40091c:	f104 0401 	add.w	r4, r4, #1
  400920:	ea4f 5244 	mov.w	r2, r4, lsl #21
  400924:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  400928:	f080 809a 	bcs.w	400a60 <__adddf3+0x240>
  40092c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  400930:	bf08      	it	eq
  400932:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  400936:	f150 0000 	adcs.w	r0, r0, #0
  40093a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40093e:	ea41 0105 	orr.w	r1, r1, r5
  400942:	bd30      	pop	{r4, r5, pc}
  400944:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  400948:	4140      	adcs	r0, r0
  40094a:	eb41 0101 	adc.w	r1, r1, r1
  40094e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  400952:	f1a4 0401 	sub.w	r4, r4, #1
  400956:	d1e9      	bne.n	40092c <__adddf3+0x10c>
  400958:	f091 0f00 	teq	r1, #0
  40095c:	bf04      	itt	eq
  40095e:	4601      	moveq	r1, r0
  400960:	2000      	moveq	r0, #0
  400962:	fab1 f381 	clz	r3, r1
  400966:	bf08      	it	eq
  400968:	3320      	addeq	r3, #32
  40096a:	f1a3 030b 	sub.w	r3, r3, #11
  40096e:	f1b3 0220 	subs.w	r2, r3, #32
  400972:	da0c      	bge.n	40098e <__adddf3+0x16e>
  400974:	320c      	adds	r2, #12
  400976:	dd08      	ble.n	40098a <__adddf3+0x16a>
  400978:	f102 0c14 	add.w	ip, r2, #20
  40097c:	f1c2 020c 	rsb	r2, r2, #12
  400980:	fa01 f00c 	lsl.w	r0, r1, ip
  400984:	fa21 f102 	lsr.w	r1, r1, r2
  400988:	e00c      	b.n	4009a4 <__adddf3+0x184>
  40098a:	f102 0214 	add.w	r2, r2, #20
  40098e:	bfd8      	it	le
  400990:	f1c2 0c20 	rsble	ip, r2, #32
  400994:	fa01 f102 	lsl.w	r1, r1, r2
  400998:	fa20 fc0c 	lsr.w	ip, r0, ip
  40099c:	bfdc      	itt	le
  40099e:	ea41 010c 	orrle.w	r1, r1, ip
  4009a2:	4090      	lslle	r0, r2
  4009a4:	1ae4      	subs	r4, r4, r3
  4009a6:	bfa2      	ittt	ge
  4009a8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  4009ac:	4329      	orrge	r1, r5
  4009ae:	bd30      	popge	{r4, r5, pc}
  4009b0:	ea6f 0404 	mvn.w	r4, r4
  4009b4:	3c1f      	subs	r4, #31
  4009b6:	da1c      	bge.n	4009f2 <__adddf3+0x1d2>
  4009b8:	340c      	adds	r4, #12
  4009ba:	dc0e      	bgt.n	4009da <__adddf3+0x1ba>
  4009bc:	f104 0414 	add.w	r4, r4, #20
  4009c0:	f1c4 0220 	rsb	r2, r4, #32
  4009c4:	fa20 f004 	lsr.w	r0, r0, r4
  4009c8:	fa01 f302 	lsl.w	r3, r1, r2
  4009cc:	ea40 0003 	orr.w	r0, r0, r3
  4009d0:	fa21 f304 	lsr.w	r3, r1, r4
  4009d4:	ea45 0103 	orr.w	r1, r5, r3
  4009d8:	bd30      	pop	{r4, r5, pc}
  4009da:	f1c4 040c 	rsb	r4, r4, #12
  4009de:	f1c4 0220 	rsb	r2, r4, #32
  4009e2:	fa20 f002 	lsr.w	r0, r0, r2
  4009e6:	fa01 f304 	lsl.w	r3, r1, r4
  4009ea:	ea40 0003 	orr.w	r0, r0, r3
  4009ee:	4629      	mov	r1, r5
  4009f0:	bd30      	pop	{r4, r5, pc}
  4009f2:	fa21 f004 	lsr.w	r0, r1, r4
  4009f6:	4629      	mov	r1, r5
  4009f8:	bd30      	pop	{r4, r5, pc}
  4009fa:	f094 0f00 	teq	r4, #0
  4009fe:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  400a02:	bf06      	itte	eq
  400a04:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  400a08:	3401      	addeq	r4, #1
  400a0a:	3d01      	subne	r5, #1
  400a0c:	e74e      	b.n	4008ac <__adddf3+0x8c>
  400a0e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  400a12:	bf18      	it	ne
  400a14:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  400a18:	d029      	beq.n	400a6e <__adddf3+0x24e>
  400a1a:	ea94 0f05 	teq	r4, r5
  400a1e:	bf08      	it	eq
  400a20:	ea90 0f02 	teqeq	r0, r2
  400a24:	d005      	beq.n	400a32 <__adddf3+0x212>
  400a26:	ea54 0c00 	orrs.w	ip, r4, r0
  400a2a:	bf04      	itt	eq
  400a2c:	4619      	moveq	r1, r3
  400a2e:	4610      	moveq	r0, r2
  400a30:	bd30      	pop	{r4, r5, pc}
  400a32:	ea91 0f03 	teq	r1, r3
  400a36:	bf1e      	ittt	ne
  400a38:	2100      	movne	r1, #0
  400a3a:	2000      	movne	r0, #0
  400a3c:	bd30      	popne	{r4, r5, pc}
  400a3e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  400a42:	d105      	bne.n	400a50 <__adddf3+0x230>
  400a44:	0040      	lsls	r0, r0, #1
  400a46:	4149      	adcs	r1, r1
  400a48:	bf28      	it	cs
  400a4a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  400a4e:	bd30      	pop	{r4, r5, pc}
  400a50:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  400a54:	bf3c      	itt	cc
  400a56:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  400a5a:	bd30      	popcc	{r4, r5, pc}
  400a5c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  400a60:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  400a64:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  400a68:	f04f 0000 	mov.w	r0, #0
  400a6c:	bd30      	pop	{r4, r5, pc}
  400a6e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  400a72:	bf1a      	itte	ne
  400a74:	4619      	movne	r1, r3
  400a76:	4610      	movne	r0, r2
  400a78:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  400a7c:	bf1c      	itt	ne
  400a7e:	460b      	movne	r3, r1
  400a80:	4602      	movne	r2, r0
  400a82:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  400a86:	bf06      	itte	eq
  400a88:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  400a8c:	ea91 0f03 	teqeq	r1, r3
  400a90:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  400a94:	bd30      	pop	{r4, r5, pc}
  400a96:	bf00      	nop

00400a98 <__aeabi_ui2d>:
  400a98:	f090 0f00 	teq	r0, #0
  400a9c:	bf04      	itt	eq
  400a9e:	2100      	moveq	r1, #0
  400aa0:	4770      	bxeq	lr
  400aa2:	b530      	push	{r4, r5, lr}
  400aa4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  400aa8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  400aac:	f04f 0500 	mov.w	r5, #0
  400ab0:	f04f 0100 	mov.w	r1, #0
  400ab4:	e750      	b.n	400958 <__adddf3+0x138>
  400ab6:	bf00      	nop

00400ab8 <__aeabi_i2d>:
  400ab8:	f090 0f00 	teq	r0, #0
  400abc:	bf04      	itt	eq
  400abe:	2100      	moveq	r1, #0
  400ac0:	4770      	bxeq	lr
  400ac2:	b530      	push	{r4, r5, lr}
  400ac4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  400ac8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  400acc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  400ad0:	bf48      	it	mi
  400ad2:	4240      	negmi	r0, r0
  400ad4:	f04f 0100 	mov.w	r1, #0
  400ad8:	e73e      	b.n	400958 <__adddf3+0x138>
  400ada:	bf00      	nop

00400adc <__aeabi_f2d>:
  400adc:	0042      	lsls	r2, r0, #1
  400ade:	ea4f 01e2 	mov.w	r1, r2, asr #3
  400ae2:	ea4f 0131 	mov.w	r1, r1, rrx
  400ae6:	ea4f 7002 	mov.w	r0, r2, lsl #28
  400aea:	bf1f      	itttt	ne
  400aec:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  400af0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  400af4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  400af8:	4770      	bxne	lr
  400afa:	f092 0f00 	teq	r2, #0
  400afe:	bf14      	ite	ne
  400b00:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  400b04:	4770      	bxeq	lr
  400b06:	b530      	push	{r4, r5, lr}
  400b08:	f44f 7460 	mov.w	r4, #896	; 0x380
  400b0c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  400b10:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  400b14:	e720      	b.n	400958 <__adddf3+0x138>
  400b16:	bf00      	nop

00400b18 <__aeabi_ul2d>:
  400b18:	ea50 0201 	orrs.w	r2, r0, r1
  400b1c:	bf08      	it	eq
  400b1e:	4770      	bxeq	lr
  400b20:	b530      	push	{r4, r5, lr}
  400b22:	f04f 0500 	mov.w	r5, #0
  400b26:	e00a      	b.n	400b3e <__aeabi_l2d+0x16>

00400b28 <__aeabi_l2d>:
  400b28:	ea50 0201 	orrs.w	r2, r0, r1
  400b2c:	bf08      	it	eq
  400b2e:	4770      	bxeq	lr
  400b30:	b530      	push	{r4, r5, lr}
  400b32:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  400b36:	d502      	bpl.n	400b3e <__aeabi_l2d+0x16>
  400b38:	4240      	negs	r0, r0
  400b3a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  400b3e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  400b42:	f104 0432 	add.w	r4, r4, #50	; 0x32
  400b46:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  400b4a:	f43f aedc 	beq.w	400906 <__adddf3+0xe6>
  400b4e:	f04f 0203 	mov.w	r2, #3
  400b52:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  400b56:	bf18      	it	ne
  400b58:	3203      	addne	r2, #3
  400b5a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  400b5e:	bf18      	it	ne
  400b60:	3203      	addne	r2, #3
  400b62:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  400b66:	f1c2 0320 	rsb	r3, r2, #32
  400b6a:	fa00 fc03 	lsl.w	ip, r0, r3
  400b6e:	fa20 f002 	lsr.w	r0, r0, r2
  400b72:	fa01 fe03 	lsl.w	lr, r1, r3
  400b76:	ea40 000e 	orr.w	r0, r0, lr
  400b7a:	fa21 f102 	lsr.w	r1, r1, r2
  400b7e:	4414      	add	r4, r2
  400b80:	e6c1      	b.n	400906 <__adddf3+0xe6>
  400b82:	bf00      	nop

00400b84 <__aeabi_d2f>:
  400b84:	ea4f 0241 	mov.w	r2, r1, lsl #1
  400b88:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  400b8c:	bf24      	itt	cs
  400b8e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  400b92:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  400b96:	d90d      	bls.n	400bb4 <__aeabi_d2f+0x30>
  400b98:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  400b9c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  400ba0:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  400ba4:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  400ba8:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  400bac:	bf08      	it	eq
  400bae:	f020 0001 	biceq.w	r0, r0, #1
  400bb2:	4770      	bx	lr
  400bb4:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  400bb8:	d121      	bne.n	400bfe <__aeabi_d2f+0x7a>
  400bba:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  400bbe:	bfbc      	itt	lt
  400bc0:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  400bc4:	4770      	bxlt	lr
  400bc6:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  400bca:	ea4f 5252 	mov.w	r2, r2, lsr #21
  400bce:	f1c2 0218 	rsb	r2, r2, #24
  400bd2:	f1c2 0c20 	rsb	ip, r2, #32
  400bd6:	fa10 f30c 	lsls.w	r3, r0, ip
  400bda:	fa20 f002 	lsr.w	r0, r0, r2
  400bde:	bf18      	it	ne
  400be0:	f040 0001 	orrne.w	r0, r0, #1
  400be4:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  400be8:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  400bec:	fa03 fc0c 	lsl.w	ip, r3, ip
  400bf0:	ea40 000c 	orr.w	r0, r0, ip
  400bf4:	fa23 f302 	lsr.w	r3, r3, r2
  400bf8:	ea4f 0343 	mov.w	r3, r3, lsl #1
  400bfc:	e7cc      	b.n	400b98 <__aeabi_d2f+0x14>
  400bfe:	ea7f 5362 	mvns.w	r3, r2, asr #21
  400c02:	d107      	bne.n	400c14 <__aeabi_d2f+0x90>
  400c04:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  400c08:	bf1e      	ittt	ne
  400c0a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  400c0e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  400c12:	4770      	bxne	lr
  400c14:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  400c18:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  400c1c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  400c20:	4770      	bx	lr
  400c22:	bf00      	nop

00400c24 <__aeabi_frsub>:
  400c24:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  400c28:	e002      	b.n	400c30 <__addsf3>
  400c2a:	bf00      	nop

00400c2c <__aeabi_fsub>:
  400c2c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00400c30 <__addsf3>:
  400c30:	0042      	lsls	r2, r0, #1
  400c32:	bf1f      	itttt	ne
  400c34:	ea5f 0341 	movsne.w	r3, r1, lsl #1
  400c38:	ea92 0f03 	teqne	r2, r3
  400c3c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
  400c40:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  400c44:	d06a      	beq.n	400d1c <__addsf3+0xec>
  400c46:	ea4f 6212 	mov.w	r2, r2, lsr #24
  400c4a:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
  400c4e:	bfc1      	itttt	gt
  400c50:	18d2      	addgt	r2, r2, r3
  400c52:	4041      	eorgt	r1, r0
  400c54:	4048      	eorgt	r0, r1
  400c56:	4041      	eorgt	r1, r0
  400c58:	bfb8      	it	lt
  400c5a:	425b      	neglt	r3, r3
  400c5c:	2b19      	cmp	r3, #25
  400c5e:	bf88      	it	hi
  400c60:	4770      	bxhi	lr
  400c62:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  400c66:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  400c6a:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  400c6e:	bf18      	it	ne
  400c70:	4240      	negne	r0, r0
  400c72:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  400c76:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
  400c7a:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
  400c7e:	bf18      	it	ne
  400c80:	4249      	negne	r1, r1
  400c82:	ea92 0f03 	teq	r2, r3
  400c86:	d03f      	beq.n	400d08 <__addsf3+0xd8>
  400c88:	f1a2 0201 	sub.w	r2, r2, #1
  400c8c:	fa41 fc03 	asr.w	ip, r1, r3
  400c90:	eb10 000c 	adds.w	r0, r0, ip
  400c94:	f1c3 0320 	rsb	r3, r3, #32
  400c98:	fa01 f103 	lsl.w	r1, r1, r3
  400c9c:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  400ca0:	d502      	bpl.n	400ca8 <__addsf3+0x78>
  400ca2:	4249      	negs	r1, r1
  400ca4:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
  400ca8:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
  400cac:	d313      	bcc.n	400cd6 <__addsf3+0xa6>
  400cae:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
  400cb2:	d306      	bcc.n	400cc2 <__addsf3+0x92>
  400cb4:	0840      	lsrs	r0, r0, #1
  400cb6:	ea4f 0131 	mov.w	r1, r1, rrx
  400cba:	f102 0201 	add.w	r2, r2, #1
  400cbe:	2afe      	cmp	r2, #254	; 0xfe
  400cc0:	d251      	bcs.n	400d66 <__addsf3+0x136>
  400cc2:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  400cc6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  400cca:	bf08      	it	eq
  400ccc:	f020 0001 	biceq.w	r0, r0, #1
  400cd0:	ea40 0003 	orr.w	r0, r0, r3
  400cd4:	4770      	bx	lr
  400cd6:	0049      	lsls	r1, r1, #1
  400cd8:	eb40 0000 	adc.w	r0, r0, r0
  400cdc:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
  400ce0:	f1a2 0201 	sub.w	r2, r2, #1
  400ce4:	d1ed      	bne.n	400cc2 <__addsf3+0x92>
  400ce6:	fab0 fc80 	clz	ip, r0
  400cea:	f1ac 0c08 	sub.w	ip, ip, #8
  400cee:	ebb2 020c 	subs.w	r2, r2, ip
  400cf2:	fa00 f00c 	lsl.w	r0, r0, ip
  400cf6:	bfaa      	itet	ge
  400cf8:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
  400cfc:	4252      	neglt	r2, r2
  400cfe:	4318      	orrge	r0, r3
  400d00:	bfbc      	itt	lt
  400d02:	40d0      	lsrlt	r0, r2
  400d04:	4318      	orrlt	r0, r3
  400d06:	4770      	bx	lr
  400d08:	f092 0f00 	teq	r2, #0
  400d0c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
  400d10:	bf06      	itte	eq
  400d12:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
  400d16:	3201      	addeq	r2, #1
  400d18:	3b01      	subne	r3, #1
  400d1a:	e7b5      	b.n	400c88 <__addsf3+0x58>
  400d1c:	ea4f 0341 	mov.w	r3, r1, lsl #1
  400d20:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  400d24:	bf18      	it	ne
  400d26:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  400d2a:	d021      	beq.n	400d70 <__addsf3+0x140>
  400d2c:	ea92 0f03 	teq	r2, r3
  400d30:	d004      	beq.n	400d3c <__addsf3+0x10c>
  400d32:	f092 0f00 	teq	r2, #0
  400d36:	bf08      	it	eq
  400d38:	4608      	moveq	r0, r1
  400d3a:	4770      	bx	lr
  400d3c:	ea90 0f01 	teq	r0, r1
  400d40:	bf1c      	itt	ne
  400d42:	2000      	movne	r0, #0
  400d44:	4770      	bxne	lr
  400d46:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
  400d4a:	d104      	bne.n	400d56 <__addsf3+0x126>
  400d4c:	0040      	lsls	r0, r0, #1
  400d4e:	bf28      	it	cs
  400d50:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
  400d54:	4770      	bx	lr
  400d56:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
  400d5a:	bf3c      	itt	cc
  400d5c:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
  400d60:	4770      	bxcc	lr
  400d62:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  400d66:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
  400d6a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  400d6e:	4770      	bx	lr
  400d70:	ea7f 6222 	mvns.w	r2, r2, asr #24
  400d74:	bf16      	itet	ne
  400d76:	4608      	movne	r0, r1
  400d78:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
  400d7c:	4601      	movne	r1, r0
  400d7e:	0242      	lsls	r2, r0, #9
  400d80:	bf06      	itte	eq
  400d82:	ea5f 2341 	movseq.w	r3, r1, lsl #9
  400d86:	ea90 0f01 	teqeq	r0, r1
  400d8a:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
  400d8e:	4770      	bx	lr

00400d90 <__aeabi_ui2f>:
  400d90:	f04f 0300 	mov.w	r3, #0
  400d94:	e004      	b.n	400da0 <__aeabi_i2f+0x8>
  400d96:	bf00      	nop

00400d98 <__aeabi_i2f>:
  400d98:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
  400d9c:	bf48      	it	mi
  400d9e:	4240      	negmi	r0, r0
  400da0:	ea5f 0c00 	movs.w	ip, r0
  400da4:	bf08      	it	eq
  400da6:	4770      	bxeq	lr
  400da8:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
  400dac:	4601      	mov	r1, r0
  400dae:	f04f 0000 	mov.w	r0, #0
  400db2:	e01c      	b.n	400dee <__aeabi_l2f+0x2a>

00400db4 <__aeabi_ul2f>:
  400db4:	ea50 0201 	orrs.w	r2, r0, r1
  400db8:	bf08      	it	eq
  400dba:	4770      	bxeq	lr
  400dbc:	f04f 0300 	mov.w	r3, #0
  400dc0:	e00a      	b.n	400dd8 <__aeabi_l2f+0x14>
  400dc2:	bf00      	nop

00400dc4 <__aeabi_l2f>:
  400dc4:	ea50 0201 	orrs.w	r2, r0, r1
  400dc8:	bf08      	it	eq
  400dca:	4770      	bxeq	lr
  400dcc:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
  400dd0:	d502      	bpl.n	400dd8 <__aeabi_l2f+0x14>
  400dd2:	4240      	negs	r0, r0
  400dd4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  400dd8:	ea5f 0c01 	movs.w	ip, r1
  400ddc:	bf02      	ittt	eq
  400dde:	4684      	moveq	ip, r0
  400de0:	4601      	moveq	r1, r0
  400de2:	2000      	moveq	r0, #0
  400de4:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
  400de8:	bf08      	it	eq
  400dea:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
  400dee:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
  400df2:	fabc f28c 	clz	r2, ip
  400df6:	3a08      	subs	r2, #8
  400df8:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
  400dfc:	db10      	blt.n	400e20 <__aeabi_l2f+0x5c>
  400dfe:	fa01 fc02 	lsl.w	ip, r1, r2
  400e02:	4463      	add	r3, ip
  400e04:	fa00 fc02 	lsl.w	ip, r0, r2
  400e08:	f1c2 0220 	rsb	r2, r2, #32
  400e0c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  400e10:	fa20 f202 	lsr.w	r2, r0, r2
  400e14:	eb43 0002 	adc.w	r0, r3, r2
  400e18:	bf08      	it	eq
  400e1a:	f020 0001 	biceq.w	r0, r0, #1
  400e1e:	4770      	bx	lr
  400e20:	f102 0220 	add.w	r2, r2, #32
  400e24:	fa01 fc02 	lsl.w	ip, r1, r2
  400e28:	f1c2 0220 	rsb	r2, r2, #32
  400e2c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
  400e30:	fa21 f202 	lsr.w	r2, r1, r2
  400e34:	eb43 0002 	adc.w	r0, r3, r2
  400e38:	bf08      	it	eq
  400e3a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  400e3e:	4770      	bx	lr

00400e40 <__aeabi_fmul>:
  400e40:	f04f 0cff 	mov.w	ip, #255	; 0xff
  400e44:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  400e48:	bf1e      	ittt	ne
  400e4a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  400e4e:	ea92 0f0c 	teqne	r2, ip
  400e52:	ea93 0f0c 	teqne	r3, ip
  400e56:	d06f      	beq.n	400f38 <__aeabi_fmul+0xf8>
  400e58:	441a      	add	r2, r3
  400e5a:	ea80 0c01 	eor.w	ip, r0, r1
  400e5e:	0240      	lsls	r0, r0, #9
  400e60:	bf18      	it	ne
  400e62:	ea5f 2141 	movsne.w	r1, r1, lsl #9
  400e66:	d01e      	beq.n	400ea6 <__aeabi_fmul+0x66>
  400e68:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  400e6c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
  400e70:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
  400e74:	fba0 3101 	umull	r3, r1, r0, r1
  400e78:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  400e7c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
  400e80:	bf3e      	ittt	cc
  400e82:	0049      	lslcc	r1, r1, #1
  400e84:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
  400e88:	005b      	lslcc	r3, r3, #1
  400e8a:	ea40 0001 	orr.w	r0, r0, r1
  400e8e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
  400e92:	2afd      	cmp	r2, #253	; 0xfd
  400e94:	d81d      	bhi.n	400ed2 <__aeabi_fmul+0x92>
  400e96:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
  400e9a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  400e9e:	bf08      	it	eq
  400ea0:	f020 0001 	biceq.w	r0, r0, #1
  400ea4:	4770      	bx	lr
  400ea6:	f090 0f00 	teq	r0, #0
  400eaa:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  400eae:	bf08      	it	eq
  400eb0:	0249      	lsleq	r1, r1, #9
  400eb2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  400eb6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
  400eba:	3a7f      	subs	r2, #127	; 0x7f
  400ebc:	bfc2      	ittt	gt
  400ebe:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  400ec2:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  400ec6:	4770      	bxgt	lr
  400ec8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  400ecc:	f04f 0300 	mov.w	r3, #0
  400ed0:	3a01      	subs	r2, #1
  400ed2:	dc5d      	bgt.n	400f90 <__aeabi_fmul+0x150>
  400ed4:	f112 0f19 	cmn.w	r2, #25
  400ed8:	bfdc      	itt	le
  400eda:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
  400ede:	4770      	bxle	lr
  400ee0:	f1c2 0200 	rsb	r2, r2, #0
  400ee4:	0041      	lsls	r1, r0, #1
  400ee6:	fa21 f102 	lsr.w	r1, r1, r2
  400eea:	f1c2 0220 	rsb	r2, r2, #32
  400eee:	fa00 fc02 	lsl.w	ip, r0, r2
  400ef2:	ea5f 0031 	movs.w	r0, r1, rrx
  400ef6:	f140 0000 	adc.w	r0, r0, #0
  400efa:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
  400efe:	bf08      	it	eq
  400f00:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  400f04:	4770      	bx	lr
  400f06:	f092 0f00 	teq	r2, #0
  400f0a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  400f0e:	bf02      	ittt	eq
  400f10:	0040      	lsleq	r0, r0, #1
  400f12:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  400f16:	3a01      	subeq	r2, #1
  400f18:	d0f9      	beq.n	400f0e <__aeabi_fmul+0xce>
  400f1a:	ea40 000c 	orr.w	r0, r0, ip
  400f1e:	f093 0f00 	teq	r3, #0
  400f22:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  400f26:	bf02      	ittt	eq
  400f28:	0049      	lsleq	r1, r1, #1
  400f2a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  400f2e:	3b01      	subeq	r3, #1
  400f30:	d0f9      	beq.n	400f26 <__aeabi_fmul+0xe6>
  400f32:	ea41 010c 	orr.w	r1, r1, ip
  400f36:	e78f      	b.n	400e58 <__aeabi_fmul+0x18>
  400f38:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  400f3c:	ea92 0f0c 	teq	r2, ip
  400f40:	bf18      	it	ne
  400f42:	ea93 0f0c 	teqne	r3, ip
  400f46:	d00a      	beq.n	400f5e <__aeabi_fmul+0x11e>
  400f48:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  400f4c:	bf18      	it	ne
  400f4e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  400f52:	d1d8      	bne.n	400f06 <__aeabi_fmul+0xc6>
  400f54:	ea80 0001 	eor.w	r0, r0, r1
  400f58:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  400f5c:	4770      	bx	lr
  400f5e:	f090 0f00 	teq	r0, #0
  400f62:	bf17      	itett	ne
  400f64:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
  400f68:	4608      	moveq	r0, r1
  400f6a:	f091 0f00 	teqne	r1, #0
  400f6e:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
  400f72:	d014      	beq.n	400f9e <__aeabi_fmul+0x15e>
  400f74:	ea92 0f0c 	teq	r2, ip
  400f78:	d101      	bne.n	400f7e <__aeabi_fmul+0x13e>
  400f7a:	0242      	lsls	r2, r0, #9
  400f7c:	d10f      	bne.n	400f9e <__aeabi_fmul+0x15e>
  400f7e:	ea93 0f0c 	teq	r3, ip
  400f82:	d103      	bne.n	400f8c <__aeabi_fmul+0x14c>
  400f84:	024b      	lsls	r3, r1, #9
  400f86:	bf18      	it	ne
  400f88:	4608      	movne	r0, r1
  400f8a:	d108      	bne.n	400f9e <__aeabi_fmul+0x15e>
  400f8c:	ea80 0001 	eor.w	r0, r0, r1
  400f90:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  400f94:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  400f98:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  400f9c:	4770      	bx	lr
  400f9e:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  400fa2:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
  400fa6:	4770      	bx	lr

00400fa8 <__aeabi_fdiv>:
  400fa8:	f04f 0cff 	mov.w	ip, #255	; 0xff
  400fac:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  400fb0:	bf1e      	ittt	ne
  400fb2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  400fb6:	ea92 0f0c 	teqne	r2, ip
  400fba:	ea93 0f0c 	teqne	r3, ip
  400fbe:	d069      	beq.n	401094 <__aeabi_fdiv+0xec>
  400fc0:	eba2 0203 	sub.w	r2, r2, r3
  400fc4:	ea80 0c01 	eor.w	ip, r0, r1
  400fc8:	0249      	lsls	r1, r1, #9
  400fca:	ea4f 2040 	mov.w	r0, r0, lsl #9
  400fce:	d037      	beq.n	401040 <__aeabi_fdiv+0x98>
  400fd0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  400fd4:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
  400fd8:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
  400fdc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  400fe0:	428b      	cmp	r3, r1
  400fe2:	bf38      	it	cc
  400fe4:	005b      	lslcc	r3, r3, #1
  400fe6:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
  400fea:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
  400fee:	428b      	cmp	r3, r1
  400ff0:	bf24      	itt	cs
  400ff2:	1a5b      	subcs	r3, r3, r1
  400ff4:	ea40 000c 	orrcs.w	r0, r0, ip
  400ff8:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
  400ffc:	bf24      	itt	cs
  400ffe:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
  401002:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  401006:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
  40100a:	bf24      	itt	cs
  40100c:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
  401010:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  401014:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
  401018:	bf24      	itt	cs
  40101a:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
  40101e:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  401022:	011b      	lsls	r3, r3, #4
  401024:	bf18      	it	ne
  401026:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
  40102a:	d1e0      	bne.n	400fee <__aeabi_fdiv+0x46>
  40102c:	2afd      	cmp	r2, #253	; 0xfd
  40102e:	f63f af50 	bhi.w	400ed2 <__aeabi_fmul+0x92>
  401032:	428b      	cmp	r3, r1
  401034:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  401038:	bf08      	it	eq
  40103a:	f020 0001 	biceq.w	r0, r0, #1
  40103e:	4770      	bx	lr
  401040:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  401044:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  401048:	327f      	adds	r2, #127	; 0x7f
  40104a:	bfc2      	ittt	gt
  40104c:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  401050:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  401054:	4770      	bxgt	lr
  401056:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  40105a:	f04f 0300 	mov.w	r3, #0
  40105e:	3a01      	subs	r2, #1
  401060:	e737      	b.n	400ed2 <__aeabi_fmul+0x92>
  401062:	f092 0f00 	teq	r2, #0
  401066:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  40106a:	bf02      	ittt	eq
  40106c:	0040      	lsleq	r0, r0, #1
  40106e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  401072:	3a01      	subeq	r2, #1
  401074:	d0f9      	beq.n	40106a <__aeabi_fdiv+0xc2>
  401076:	ea40 000c 	orr.w	r0, r0, ip
  40107a:	f093 0f00 	teq	r3, #0
  40107e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  401082:	bf02      	ittt	eq
  401084:	0049      	lsleq	r1, r1, #1
  401086:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  40108a:	3b01      	subeq	r3, #1
  40108c:	d0f9      	beq.n	401082 <__aeabi_fdiv+0xda>
  40108e:	ea41 010c 	orr.w	r1, r1, ip
  401092:	e795      	b.n	400fc0 <__aeabi_fdiv+0x18>
  401094:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  401098:	ea92 0f0c 	teq	r2, ip
  40109c:	d108      	bne.n	4010b0 <__aeabi_fdiv+0x108>
  40109e:	0242      	lsls	r2, r0, #9
  4010a0:	f47f af7d 	bne.w	400f9e <__aeabi_fmul+0x15e>
  4010a4:	ea93 0f0c 	teq	r3, ip
  4010a8:	f47f af70 	bne.w	400f8c <__aeabi_fmul+0x14c>
  4010ac:	4608      	mov	r0, r1
  4010ae:	e776      	b.n	400f9e <__aeabi_fmul+0x15e>
  4010b0:	ea93 0f0c 	teq	r3, ip
  4010b4:	d104      	bne.n	4010c0 <__aeabi_fdiv+0x118>
  4010b6:	024b      	lsls	r3, r1, #9
  4010b8:	f43f af4c 	beq.w	400f54 <__aeabi_fmul+0x114>
  4010bc:	4608      	mov	r0, r1
  4010be:	e76e      	b.n	400f9e <__aeabi_fmul+0x15e>
  4010c0:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  4010c4:	bf18      	it	ne
  4010c6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  4010ca:	d1ca      	bne.n	401062 <__aeabi_fdiv+0xba>
  4010cc:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
  4010d0:	f47f af5c 	bne.w	400f8c <__aeabi_fmul+0x14c>
  4010d4:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
  4010d8:	f47f af3c 	bne.w	400f54 <__aeabi_fmul+0x114>
  4010dc:	e75f      	b.n	400f9e <__aeabi_fmul+0x15e>
  4010de:	bf00      	nop

004010e0 <__gesf2>:
  4010e0:	f04f 3cff 	mov.w	ip, #4294967295
  4010e4:	e006      	b.n	4010f4 <__cmpsf2+0x4>
  4010e6:	bf00      	nop

004010e8 <__lesf2>:
  4010e8:	f04f 0c01 	mov.w	ip, #1
  4010ec:	e002      	b.n	4010f4 <__cmpsf2+0x4>
  4010ee:	bf00      	nop

004010f0 <__cmpsf2>:
  4010f0:	f04f 0c01 	mov.w	ip, #1
  4010f4:	f84d cd04 	str.w	ip, [sp, #-4]!
  4010f8:	ea4f 0240 	mov.w	r2, r0, lsl #1
  4010fc:	ea4f 0341 	mov.w	r3, r1, lsl #1
  401100:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  401104:	bf18      	it	ne
  401106:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  40110a:	d011      	beq.n	401130 <__cmpsf2+0x40>
  40110c:	b001      	add	sp, #4
  40110e:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
  401112:	bf18      	it	ne
  401114:	ea90 0f01 	teqne	r0, r1
  401118:	bf58      	it	pl
  40111a:	ebb2 0003 	subspl.w	r0, r2, r3
  40111e:	bf88      	it	hi
  401120:	17c8      	asrhi	r0, r1, #31
  401122:	bf38      	it	cc
  401124:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
  401128:	bf18      	it	ne
  40112a:	f040 0001 	orrne.w	r0, r0, #1
  40112e:	4770      	bx	lr
  401130:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  401134:	d102      	bne.n	40113c <__cmpsf2+0x4c>
  401136:	ea5f 2c40 	movs.w	ip, r0, lsl #9
  40113a:	d105      	bne.n	401148 <__cmpsf2+0x58>
  40113c:	ea7f 6c23 	mvns.w	ip, r3, asr #24
  401140:	d1e4      	bne.n	40110c <__cmpsf2+0x1c>
  401142:	ea5f 2c41 	movs.w	ip, r1, lsl #9
  401146:	d0e1      	beq.n	40110c <__cmpsf2+0x1c>
  401148:	f85d 0b04 	ldr.w	r0, [sp], #4
  40114c:	4770      	bx	lr
  40114e:	bf00      	nop

00401150 <__aeabi_cfrcmple>:
  401150:	4684      	mov	ip, r0
  401152:	4608      	mov	r0, r1
  401154:	4661      	mov	r1, ip
  401156:	e7ff      	b.n	401158 <__aeabi_cfcmpeq>

00401158 <__aeabi_cfcmpeq>:
  401158:	b50f      	push	{r0, r1, r2, r3, lr}
  40115a:	f7ff ffc9 	bl	4010f0 <__cmpsf2>
  40115e:	2800      	cmp	r0, #0
  401160:	bf48      	it	mi
  401162:	f110 0f00 	cmnmi.w	r0, #0
  401166:	bd0f      	pop	{r0, r1, r2, r3, pc}

00401168 <__aeabi_fcmpeq>:
  401168:	f84d ed08 	str.w	lr, [sp, #-8]!
  40116c:	f7ff fff4 	bl	401158 <__aeabi_cfcmpeq>
  401170:	bf0c      	ite	eq
  401172:	2001      	moveq	r0, #1
  401174:	2000      	movne	r0, #0
  401176:	f85d fb08 	ldr.w	pc, [sp], #8
  40117a:	bf00      	nop

0040117c <__aeabi_fcmplt>:
  40117c:	f84d ed08 	str.w	lr, [sp, #-8]!
  401180:	f7ff ffea 	bl	401158 <__aeabi_cfcmpeq>
  401184:	bf34      	ite	cc
  401186:	2001      	movcc	r0, #1
  401188:	2000      	movcs	r0, #0
  40118a:	f85d fb08 	ldr.w	pc, [sp], #8
  40118e:	bf00      	nop

00401190 <__aeabi_fcmple>:
  401190:	f84d ed08 	str.w	lr, [sp, #-8]!
  401194:	f7ff ffe0 	bl	401158 <__aeabi_cfcmpeq>
  401198:	bf94      	ite	ls
  40119a:	2001      	movls	r0, #1
  40119c:	2000      	movhi	r0, #0
  40119e:	f85d fb08 	ldr.w	pc, [sp], #8
  4011a2:	bf00      	nop

004011a4 <__aeabi_fcmpge>:
  4011a4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4011a8:	f7ff ffd2 	bl	401150 <__aeabi_cfrcmple>
  4011ac:	bf94      	ite	ls
  4011ae:	2001      	movls	r0, #1
  4011b0:	2000      	movhi	r0, #0
  4011b2:	f85d fb08 	ldr.w	pc, [sp], #8
  4011b6:	bf00      	nop

004011b8 <__aeabi_fcmpgt>:
  4011b8:	f84d ed08 	str.w	lr, [sp, #-8]!
  4011bc:	f7ff ffc8 	bl	401150 <__aeabi_cfrcmple>
  4011c0:	bf34      	ite	cc
  4011c2:	2001      	movcc	r0, #1
  4011c4:	2000      	movcs	r0, #0
  4011c6:	f85d fb08 	ldr.w	pc, [sp], #8
  4011ca:	bf00      	nop

004011cc <__aeabi_f2uiz>:
  4011cc:	0042      	lsls	r2, r0, #1
  4011ce:	d20e      	bcs.n	4011ee <__aeabi_f2uiz+0x22>
  4011d0:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
  4011d4:	d30b      	bcc.n	4011ee <__aeabi_f2uiz+0x22>
  4011d6:	f04f 039e 	mov.w	r3, #158	; 0x9e
  4011da:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
  4011de:	d409      	bmi.n	4011f4 <__aeabi_f2uiz+0x28>
  4011e0:	ea4f 2300 	mov.w	r3, r0, lsl #8
  4011e4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4011e8:	fa23 f002 	lsr.w	r0, r3, r2
  4011ec:	4770      	bx	lr
  4011ee:	f04f 0000 	mov.w	r0, #0
  4011f2:	4770      	bx	lr
  4011f4:	f112 0f61 	cmn.w	r2, #97	; 0x61
  4011f8:	d101      	bne.n	4011fe <__aeabi_f2uiz+0x32>
  4011fa:	0242      	lsls	r2, r0, #9
  4011fc:	d102      	bne.n	401204 <__aeabi_f2uiz+0x38>
  4011fe:	f04f 30ff 	mov.w	r0, #4294967295
  401202:	4770      	bx	lr
  401204:	f04f 0000 	mov.w	r0, #0
  401208:	4770      	bx	lr
  40120a:	bf00      	nop

0040120c <__libc_init_array>:
  40120c:	b570      	push	{r4, r5, r6, lr}
  40120e:	4e0f      	ldr	r6, [pc, #60]	; (40124c <__libc_init_array+0x40>)
  401210:	4d0f      	ldr	r5, [pc, #60]	; (401250 <__libc_init_array+0x44>)
  401212:	1b76      	subs	r6, r6, r5
  401214:	10b6      	asrs	r6, r6, #2
  401216:	bf18      	it	ne
  401218:	2400      	movne	r4, #0
  40121a:	d005      	beq.n	401228 <__libc_init_array+0x1c>
  40121c:	3401      	adds	r4, #1
  40121e:	f855 3b04 	ldr.w	r3, [r5], #4
  401222:	4798      	blx	r3
  401224:	42a6      	cmp	r6, r4
  401226:	d1f9      	bne.n	40121c <__libc_init_array+0x10>
  401228:	4e0a      	ldr	r6, [pc, #40]	; (401254 <__libc_init_array+0x48>)
  40122a:	4d0b      	ldr	r5, [pc, #44]	; (401258 <__libc_init_array+0x4c>)
  40122c:	1b76      	subs	r6, r6, r5
  40122e:	f000 f9db 	bl	4015e8 <_init>
  401232:	10b6      	asrs	r6, r6, #2
  401234:	bf18      	it	ne
  401236:	2400      	movne	r4, #0
  401238:	d006      	beq.n	401248 <__libc_init_array+0x3c>
  40123a:	3401      	adds	r4, #1
  40123c:	f855 3b04 	ldr.w	r3, [r5], #4
  401240:	4798      	blx	r3
  401242:	42a6      	cmp	r6, r4
  401244:	d1f9      	bne.n	40123a <__libc_init_array+0x2e>
  401246:	bd70      	pop	{r4, r5, r6, pc}
  401248:	bd70      	pop	{r4, r5, r6, pc}
  40124a:	bf00      	nop
  40124c:	004015f4 	.word	0x004015f4
  401250:	004015f4 	.word	0x004015f4
  401254:	004015fc 	.word	0x004015fc
  401258:	004015f4 	.word	0x004015f4

0040125c <register_fini>:
  40125c:	4b02      	ldr	r3, [pc, #8]	; (401268 <register_fini+0xc>)
  40125e:	b113      	cbz	r3, 401266 <register_fini+0xa>
  401260:	4802      	ldr	r0, [pc, #8]	; (40126c <register_fini+0x10>)
  401262:	f000 b805 	b.w	401270 <atexit>
  401266:	4770      	bx	lr
  401268:	00000000 	.word	0x00000000
  40126c:	0040127d 	.word	0x0040127d

00401270 <atexit>:
  401270:	2300      	movs	r3, #0
  401272:	4601      	mov	r1, r0
  401274:	461a      	mov	r2, r3
  401276:	4618      	mov	r0, r3
  401278:	f000 b81e 	b.w	4012b8 <__register_exitproc>

0040127c <__libc_fini_array>:
  40127c:	b538      	push	{r3, r4, r5, lr}
  40127e:	4c0a      	ldr	r4, [pc, #40]	; (4012a8 <__libc_fini_array+0x2c>)
  401280:	4d0a      	ldr	r5, [pc, #40]	; (4012ac <__libc_fini_array+0x30>)
  401282:	1b64      	subs	r4, r4, r5
  401284:	10a4      	asrs	r4, r4, #2
  401286:	d00a      	beq.n	40129e <__libc_fini_array+0x22>
  401288:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40128c:	3b01      	subs	r3, #1
  40128e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  401292:	3c01      	subs	r4, #1
  401294:	f855 3904 	ldr.w	r3, [r5], #-4
  401298:	4798      	blx	r3
  40129a:	2c00      	cmp	r4, #0
  40129c:	d1f9      	bne.n	401292 <__libc_fini_array+0x16>
  40129e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4012a2:	f000 b9ab 	b.w	4015fc <_fini>
  4012a6:	bf00      	nop
  4012a8:	0040160c 	.word	0x0040160c
  4012ac:	00401608 	.word	0x00401608

004012b0 <__retarget_lock_acquire_recursive>:
  4012b0:	4770      	bx	lr
  4012b2:	bf00      	nop

004012b4 <__retarget_lock_release_recursive>:
  4012b4:	4770      	bx	lr
  4012b6:	bf00      	nop

004012b8 <__register_exitproc>:
  4012b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4012bc:	4d2c      	ldr	r5, [pc, #176]	; (401370 <__register_exitproc+0xb8>)
  4012be:	4606      	mov	r6, r0
  4012c0:	6828      	ldr	r0, [r5, #0]
  4012c2:	4698      	mov	r8, r3
  4012c4:	460f      	mov	r7, r1
  4012c6:	4691      	mov	r9, r2
  4012c8:	f7ff fff2 	bl	4012b0 <__retarget_lock_acquire_recursive>
  4012cc:	4b29      	ldr	r3, [pc, #164]	; (401374 <__register_exitproc+0xbc>)
  4012ce:	681c      	ldr	r4, [r3, #0]
  4012d0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  4012d4:	2b00      	cmp	r3, #0
  4012d6:	d03e      	beq.n	401356 <__register_exitproc+0x9e>
  4012d8:	685a      	ldr	r2, [r3, #4]
  4012da:	2a1f      	cmp	r2, #31
  4012dc:	dc1c      	bgt.n	401318 <__register_exitproc+0x60>
  4012de:	f102 0e01 	add.w	lr, r2, #1
  4012e2:	b176      	cbz	r6, 401302 <__register_exitproc+0x4a>
  4012e4:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  4012e8:	2401      	movs	r4, #1
  4012ea:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  4012ee:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4012f2:	4094      	lsls	r4, r2
  4012f4:	4320      	orrs	r0, r4
  4012f6:	2e02      	cmp	r6, #2
  4012f8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4012fc:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  401300:	d023      	beq.n	40134a <__register_exitproc+0x92>
  401302:	3202      	adds	r2, #2
  401304:	f8c3 e004 	str.w	lr, [r3, #4]
  401308:	6828      	ldr	r0, [r5, #0]
  40130a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40130e:	f7ff ffd1 	bl	4012b4 <__retarget_lock_release_recursive>
  401312:	2000      	movs	r0, #0
  401314:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401318:	4b17      	ldr	r3, [pc, #92]	; (401378 <__register_exitproc+0xc0>)
  40131a:	b30b      	cbz	r3, 401360 <__register_exitproc+0xa8>
  40131c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  401320:	f3af 8000 	nop.w
  401324:	4603      	mov	r3, r0
  401326:	b1d8      	cbz	r0, 401360 <__register_exitproc+0xa8>
  401328:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40132c:	6002      	str	r2, [r0, #0]
  40132e:	2100      	movs	r1, #0
  401330:	6041      	str	r1, [r0, #4]
  401332:	460a      	mov	r2, r1
  401334:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  401338:	f04f 0e01 	mov.w	lr, #1
  40133c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  401340:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  401344:	2e00      	cmp	r6, #0
  401346:	d0dc      	beq.n	401302 <__register_exitproc+0x4a>
  401348:	e7cc      	b.n	4012e4 <__register_exitproc+0x2c>
  40134a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40134e:	430c      	orrs	r4, r1
  401350:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  401354:	e7d5      	b.n	401302 <__register_exitproc+0x4a>
  401356:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40135a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40135e:	e7bb      	b.n	4012d8 <__register_exitproc+0x20>
  401360:	6828      	ldr	r0, [r5, #0]
  401362:	f7ff ffa7 	bl	4012b4 <__retarget_lock_release_recursive>
  401366:	f04f 30ff 	mov.w	r0, #4294967295
  40136a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40136e:	bf00      	nop
  401370:	20400430 	.word	0x20400430
  401374:	004015e4 	.word	0x004015e4
  401378:	00000000 	.word	0x00000000

0040137c <coefficients>:
  40137c:	392d852d 3b3d7688 3b14a785 3b5390e9     -.-9.v=;...;..S;
  40138c:	3b8bf6c4 3bb40002 3be1ce00 3c0a9fb0     ...;...;...;...<
  40139c:	3c270fec 3c45fe7b 3c6727d3 3c8514d2     ..'<{.E<.'g<...<
  4013ac:	3c9748cd 3ca9f06b 3cbcc298 3ccf6f36     .H.<k..<...<6o.<
  4013bc:	3ce1a280 3cf309f3 3d01ab22 3d091848     ...<...<"..=H..=
  4013cc:	3d0fa8f4 3d15396a 3d19af03 3d1cee2d     ...=j9.=...=-..=
  4013dc:	3d1ee770 3d1f9372 3d1ee770 3d1cee2d     p..=r..=p..=-..=
  4013ec:	3d19af03 3d15396a 3d0fa8f4 3d091848     ...=j9.=...=H..=
  4013fc:	3d01ab22 3cf309f3 3ce1a280 3ccf6f36     "..=...<...<6o.<
  40140c:	3cbcc298 3ca9f06b 3c9748cd 3c8514d2     ...<k..<.H.<...<
  40141c:	3c6727d3 3c45fe7b 3c270fec 3c0a9fb0     .'g<{.E<..'<...<
  40142c:	3be1ce00 3bb40002 3b8bf6c4 3b5390e9     ...;...;...;..S;
  40143c:	3b14a785 3b3d7688 392d852d              ...;.v=;-.-9

00401448 <N_coefficients>:
  401448:	00000033                                3...

0040144c <coefficients91>:
  40144c:	38362cad b8a5c502 b8c6d5ec b8df9182     .,68............
  40145c:	b8b0ad53 b738263d 38ea891e 39885c7a     S...=&8....8z\.9
  40146c:	39cb5ea2 39e504e6 39b920c9 38e56dbb     .^.9...9. .9.m.8
  40147c:	b9906ffa ba3e7a56 ba92b138 baaaea10     .o..Vz>.8.......
  40148c:	ba969b60 ba1a3329 39b0cefd 3abf53c4     `...)3.....9.S.:
  40149c:	3b23e594 3b4ce15c 3b46ac89 3b05d7ac     ..#;\.L;..F;...;
  4014ac:	395138a2 bb0ffdcc bb972131 bbd0bbfc     .8Q9....1!......
  4014bc:	bbdf4d53 bbb4273c bb1a39a0 3b1011a7     SM..<'...9.....;
  4014cc:	3bedb42a 3c3d7c69 3c61fdcf 3c526d0b     *..;i|=<..a<.mR<
  4014dc:	3c065d78 3948eb21 bc227b9b bca3fc9c     x].<!.H9.{".....
  4014ec:	bce117dd bcf29f93 bcc6df38 bc295425     ........8...%T).
  4014fc:	3c433de0 3d268a57 3d94f018 3dd51825     .=C<W.&=...=%..=
  40150c:	3e057b3b 3e17699a 3e1db3a0 3e17699a     ;{.>.i.>...>.i.>
  40151c:	3e057b3b 3dd51825 3d94f018 3d268a57     ;{.>%..=...=W.&=
  40152c:	3c433de0 bc295425 bcc6df38 bcf29f93     .=C<%T).8.......
  40153c:	bce117dd bca3fc9c bc227b9b 3948eb21     .........{".!.H9
  40154c:	3c065d78 3c526d0b 3c61fdcf 3c3d7c69     x].<.mR<..a<i|=<
  40155c:	3bedb42a 3b1011a7 bb1a39a0 bbb4273c     *..;...;.9..<'..
  40156c:	bbdf4d53 bbd0bbfc bb972131 bb0ffdcc     SM......1!......
  40157c:	395138a2 3b05d7ac 3b46ac89 3b4ce15c     .8Q9...;..F;\.L;
  40158c:	3b23e594 3abf53c4 39b0cefd ba1a3329     ..#;.S.:...9)3..
  40159c:	ba969b60 baaaea10 ba92b138 ba3e7a56     `.......8...Vz>.
  4015ac:	b9906ffa 38e56dbb 39b920c9 39e504e6     .o...m.8. .9...9
  4015bc:	39cb5ea2 39885c7a 38ea891e b738263d     .^.9z\.9...8=&8.
  4015cc:	b8b0ad53 b8df9182 b8c6d5ec b8a5c502     S...............
  4015dc:	38362cad                                .,68

004015e0 <N_coefficients91>:
  4015e0:	00000065                                e...

004015e4 <_global_impure_ptr>:
  4015e4:	20400008                                ..@ 

004015e8 <_init>:
  4015e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4015ea:	bf00      	nop
  4015ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4015ee:	bc08      	pop	{r3}
  4015f0:	469e      	mov	lr, r3
  4015f2:	4770      	bx	lr

004015f4 <__init_array_start>:
  4015f4:	0040125d 	.word	0x0040125d

004015f8 <__frame_dummy_init_array_entry>:
  4015f8:	0040018d                                ..@.

004015fc <_fini>:
  4015fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4015fe:	bf00      	nop
  401600:	bcf8      	pop	{r3, r4, r5, r6, r7}
  401602:	bc08      	pop	{r3}
  401604:	469e      	mov	lr, r3
  401606:	4770      	bx	lr

00401608 <__fini_array_start>:
  401608:	00400169 	.word	0x00400169
